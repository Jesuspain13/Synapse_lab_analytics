{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"workspaceName": {
			"type": "string",
			"metadata": "Workspace name",
			"defaultValue": "asaworkspace801100"
		},
		"asadatalake01_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'asadatalake01'"
		},
		"asastore01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asastore01'"
		},
		"asaworkspace801100-WorkspaceDefaultSqlServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'asaworkspace801100-WorkspaceDefaultSqlServer'"
		},
		"sqlpool01_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'sqlpool01'"
		},
		"CognitiveRESTEndpoint_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://cogs-801100.cognitiveservices.azure.com/"
		},
		"CognitiveService_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "f43f70f1-af80-4cd6-8ee6-e2f20bd5a8bf"
		},
		"KeyVault_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://keyvault-801100.vault.azure.net"
		},
		"asadataexplorer801100_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sales"
		},
		"asadatalake01_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asadatalake801100.dfs.core.windows.net"
		},
		"asamlworkspace801100_properties_typeProperties_subscriptionId": {
			"type": "string",
			"defaultValue": "f43f70f1-af80-4cd6-8ee6-e2f20bd5a8bf"
		},
		"asamlworkspace801100_properties_typeProperties_resourceGroupName": {
			"type": "string",
			"defaultValue": "Synapse-AIAD-801100"
		},
		"asaworkspace801100-WorkspaceDefaultStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://asadatalake801100.dfs.core.windows.net"
		}
	},
	"variables": {
		"workspaceId": "[concat('Microsoft.Synapse/workspaces/', parameters('workspaceName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 2 - Enrich Data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"description": "Pipeline for enriching data from DimCustomer with additional location information from an external data source.",
				"activities": [
					{
						"name": "Enrich Customer Data",
						"description": "Data flow that enriches the data from the DimCustomer table with location information from an external data source. The enriched data is then copied to a staging table in Azure Synapse Analytics.",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Import Customer dimension",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EnrichCustomerData",
								"type": "DataFlowReference",
								"parameters": {
									"UniqueId": {
										"value": "'@{substring(pipeline().RunId,0,8)}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"PostalCodes": {},
									"DimCustomer": {
										"UniqueId": {
											"value": "@substring(pipeline().RunId,0,8)",
											"type": "Expression"
										}
									},
									"EnrichedCustomerData": {
										"UniqueId": {
											"value": "@substring(pipeline().RunId,0,8)",
											"type": "Expression"
										}
									},
									"EnrichedCustomerDataAdls": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 48,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Import Customer dimension",
						"description": "Copies Customer data from files stored in a data lake, renames columns, and inserts the data into a staging version of the DimCustomer table in Azure Synapse Analytics.",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "dev/bronze/wwi-dimcustomer.csv"
							},
							{
								"name": "Destination",
								"value": "wwi_staging.@{concat('DimCustomer_',substring(pipeline().RunId,0,8))}"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Customer ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWICustomerID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bill To Customer",
											"type": "String"
										},
										"sink": {
											"name": "BillToCustomer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String"
										},
										"sink": {
											"name": "Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Buying Group",
											"type": "String"
										},
										"sink": {
											"name": "BuyingGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Primary Contact",
											"type": "String"
										},
										"sink": {
											"name": "PrimaryContact",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimcustomer_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_staging_dimcustomer_asa",
								"type": "DatasetReference",
								"parameters": {
									"UniqueId": {
										"value": "@substring(pipeline().RunId,0,8)",
										"type": "Expression"
									}
								}
							}
						]
					},
					{
						"name": "ReadComments",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "wwi_comments_adls",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEachComment",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "ReadComments",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('ReadComments').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Sentiment Analysis",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "POST",
											"requestBody": {
												"value": "{\n\t\"documents\": [\n\t\t{\n\t\t\t\"id\": \"@{item().id}\",\n\t\t\t\"language\": \"en\",\n\t\t\t\"text\": \"@{item().comment}\"\n\t\t}\n\t]\n}\n",
												"type": "Expression"
											},
											"additionalHeaders": {
												"Content-Type": "application/json",
												"Ocp-Apim-Subscription-Key": "655814d3a59842e8854081a2f2075c6a"
											}
										},
										"sink": {
											"type": "JsonSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "JsonWriteSettings"
											}
										},
										"enableStaging": false
									},
									"inputs": [
										{
											"referenceName": "cognitive_rest_dataset",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "wwi_sentiments_adls",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-25T10:12:43Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/dataflows/EnrichCustomerData')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcustomer_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_staging_dimcustomer_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_comments_adls')]",
				"[concat(variables('workspaceId'), '/datasets/cognitive_rest_dataset')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_sentiments_adls')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 5 - Import sales telemetry data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFolderPath": "sale-small-telemetry*",
									"wildcardFileName": "*.csv",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureDataExplorerSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_sale_small_telemetry_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_sale_small_telemetry_ade",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-25T07:01:14Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi_sale_small_telemetry_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_sale_small_telemetry_ade')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Import WWI Data - Fact Sale Full')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactSale",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factsale_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-25T07:01:16Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_asa')]",
				"[concat(variables('workspaceId'), '/linkedServices/asastore01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Import WWI Data')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Import City dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimCity",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI City ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWICityID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String"
										},
										"sink": {
											"name": "City",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "State Province",
											"type": "String"
										},
										"sink": {
											"name": "StateProvince",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Continent",
											"type": "String"
										},
										"sink": {
											"name": "Continent",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Sales Territory",
											"type": "String"
										},
										"sink": {
											"name": "SalesTerritory",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Subregion",
											"type": "String"
										},
										"sink": {
											"name": "Subregion",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Latest Recorded Population",
											"type": "Int32"
										},
										"sink": {
											"name": "LatestRecordedPopulation",
											"type": "Int64"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimcity_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimcity_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Customer dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimCustomer",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Customer ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWICustomerID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Bill To Customer",
											"type": "String"
										},
										"sink": {
											"name": "BillToCustomer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String"
										},
										"sink": {
											"name": "Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Buying Group",
											"type": "String"
										},
										"sink": {
											"name": "BuyingGroup",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Primary Contact",
											"type": "String"
										},
										"sink": {
											"name": "PrimaryContact",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimcustomer_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimcustomer_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Date dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimDate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date",
											"type": "DateTime"
										},
										"sink": {
											"name": "Date",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Day Number",
											"type": "Int32"
										},
										"sink": {
											"name": "DayNumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Day",
											"type": "String"
										},
										"sink": {
											"name": "Day",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Month",
											"type": "String"
										},
										"sink": {
											"name": "Month",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Short Month",
											"type": "String"
										},
										"sink": {
											"name": "ShortMonth",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Calendar Month Number",
											"type": "Int32"
										},
										"sink": {
											"name": "CalendarMonthNumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Calendar Month Label",
											"type": "String"
										},
										"sink": {
											"name": "CalendarMonthLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Calendar Year",
											"type": "Int32"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Calendar Year Label",
											"type": "String"
										},
										"sink": {
											"name": "CalendarYearLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fiscal Month Number",
											"type": "Int32"
										},
										"sink": {
											"name": "FiscalMonthNumber",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fiscal Month Label",
											"type": "String"
										},
										"sink": {
											"name": "FiscalMonthLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Fiscal Year",
											"type": "Int32"
										},
										"sink": {
											"name": "FiscalYear",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Fiscal Year Label",
											"type": "String"
										},
										"sink": {
											"name": "FiscalYearLabel",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ISO Week Number",
											"type": "Int32"
										},
										"sink": {
											"name": "ISOWeekNumber",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimdate_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimdate_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Employee dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimEmployee",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Employee Key",
											"type": "Int32"
										},
										"sink": {
											"name": "EmployeeKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Employee ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIEmployeeID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Employee",
											"type": "String"
										},
										"sink": {
											"name": "Employee",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Preferred Name",
											"type": "String"
										},
										"sink": {
											"name": "PreferredName",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Is Salesperson",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsSalesperson",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimemployee_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimemployee_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Payment Method dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimPaymentMethod",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Payment Method Key",
											"type": "Int32"
										},
										"sink": {
											"name": "PaymentMethodKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Payment Method ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIPaymentMethodID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Payment Method",
											"type": "String"
										},
										"sink": {
											"name": "PaymentMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimpaymentmethod_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimpaymentmethod_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Stock Item dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimStockItem",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Stock Item ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIStockItemID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item",
											"type": "String"
										},
										"sink": {
											"name": "Stock Item",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String"
										},
										"sink": {
											"name": "Color",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Selling Package",
											"type": "String"
										},
										"sink": {
											"name": "SellingPackage",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Buying Package",
											"type": "String"
										},
										"sink": {
											"name": "Buying Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Brand",
											"type": "String"
										},
										"sink": {
											"name": "Brand",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String"
										},
										"sink": {
											"name": "Size",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Lead Time Days",
											"type": "Int32"
										},
										"sink": {
											"name": "LeadTimeDays",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Quantity Per Outer",
											"type": "Int32"
										},
										"sink": {
											"name": "QuantityPerOuter",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Is Chiller Stock",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsChillerStock",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Barcode",
											"type": "String"
										},
										"sink": {
											"name": "Barcode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Recommended Retail Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "RecommendedRetailPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Typical Weight Per Unit",
											"type": "Decimal"
										},
										"sink": {
											"name": "TypicalWeightPerUnit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimstockitem_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimstockitem_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Supplier dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimSupplier",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Supplier Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SupplierKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Supplier ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWISupplierID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Supplier",
											"type": "String"
										},
										"sink": {
											"name": "Supplier",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Category",
											"type": "String"
										},
										"sink": {
											"name": "Category",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Primary Contact",
											"type": "String"
										},
										"sink": {
											"name": "PrimaryContact",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Supplier Reference",
											"type": "String"
										},
										"sink": {
											"name": "SupplierReference",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Payment Days",
											"type": "Int32"
										},
										"sink": {
											"name": "PaymentDays",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Postal Code",
											"type": "String"
										},
										"sink": {
											"name": "PostalCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimsupplier_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimsupplier_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Transaction Type dimension",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.DimTransactionType",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Transaction Type Key",
											"type": "Int32"
										},
										"sink": {
											"name": "TransactionTypeKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Transaction Type ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWITransactionTypeID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transaction Type",
											"type": "String"
										},
										"sink": {
											"name": "TransactionType",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Valid From",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidFrom",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Valid To",
											"type": "DateTime"
										},
										"sink": {
											"name": "ValidTo",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_dimtransactiontype_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_dimtransactiontype_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Movement fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactMovement",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Supplier Key",
											"type": "String"
										},
										"sink": {
											"name": "SupplierKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transaction Type Key",
											"type": "Int32"
										},
										"sink": {
											"name": "TransactionTypeKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Stock Item Transaction ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIStockItemTransactionID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Purchase Order ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIPurchaseOrderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factmovement_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factmovement_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Order fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactOrder",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Order Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "OrderDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Picked Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "PickedDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Picker Key",
											"type": "Int32"
										},
										"sink": {
											"name": "PickerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Order ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIOrderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Backorder ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIBackorderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factorder_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factorder_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Purchase fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactPurchase",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Supplier Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SupplierKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Purchase Order ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIPurchaseOrderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Ordered Outers",
											"type": "Int32"
										},
										"sink": {
											"name": "OrderedOuters",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Ordered Quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "OrderedQuantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Received Outers",
											"type": "Int32"
										},
										"sink": {
											"name": "ReceivedOuters",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Is Order Finalized",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsOrderFinalized",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factpurchase_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factpurchase_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Stock Holding fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactStockHolding",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Quantity On Hand",
											"type": "Int32"
										},
										"sink": {
											"name": "QuantityOnHand",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bin Location",
											"type": "String"
										},
										"sink": {
											"name": "BinLocation",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Last Stocktake Quantity",
											"type": "Int32"
										},
										"sink": {
											"name": "LastStocktakeQuantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Last Cost Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "LastCostPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Reorder Level",
											"type": "Int32"
										},
										"sink": {
											"name": "ReorderLevel",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Target Stock Level",
											"type": "Int32"
										},
										"sink": {
											"name": "TargetStockLevel",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factstockholding_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_factstockholding_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Import Transaction fact",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"preCopyScript": "truncate table wwi.FactTransaction",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Supplier Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SupplierKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Transaction Type Key",
											"type": "Int32"
										},
										"sink": {
											"name": "TransactionTypeKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Payment Method Key",
											"type": "Int32"
										},
										"sink": {
											"name": "PaymentMethodKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Customer Transaction ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWICustomerTransaction ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Supplier Transaction ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWISupplierTransaction ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Purchase Order ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIPurchaseOrderID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Supplier Invoice Number",
											"type": "String"
										},
										"sink": {
											"name": "SupplierInvoiceNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Outstanding Balance",
											"type": "Decimal"
										},
										"sink": {
											"name": "OutstandingBalance",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Is Finalized",
											"type": "Boolean"
										},
										"sink": {
											"name": "IsFinalized",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_facttransaction_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_facttransaction_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-25T07:01:15Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcity_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcity_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcustomer_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimcustomer_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimdate_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimdate_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimemployee_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimemployee_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimpaymentmethod_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimpaymentmethod_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimstockitem_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimstockitem_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimsupplier_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimsupplier_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimtransactiontype_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_dimtransactiontype_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factmovement_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factmovement_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factorder_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factorder_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factpurchase_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factpurchase_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factstockholding_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factstockholding_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_facttransaction_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_facttransaction_asa')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Import WWI Perf Data - Fact Sale Fast')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data part 1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_1_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_fast_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_2_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_fast_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_4_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_fast_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_3_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_fast_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-25T07:01:16Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_1_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_perf_factsale_fast_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_2_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_4_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_3_adls')]",
				"[concat(variables('workspaceId'), '/linkedServices/asastore01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Import WWI Perf Data - Fact Sale Slow')]",
			"type": "Microsoft.Synapse/workspaces/pipelines",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"activities": [
					{
						"name": "Copy data part 1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_1_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_slow_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 2",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_2_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_slow_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 4",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_4_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_slow_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data part 3",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": false
								},
								"disableMetricsCollection": false
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "asastore01",
									"type": "LinkedServiceReference"
								},
								"path": "staging"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "City Key",
											"type": "String"
										},
										"sink": {
											"name": "CityKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Customer Key",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Bill To Customer Key",
											"type": "Int32"
										},
										"sink": {
											"name": "BillToCustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Stock Item Key",
											"type": "Int32"
										},
										"sink": {
											"name": "StockItemKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Invoice Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "InvoiceDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Delivery Date Key",
											"type": "DateTime"
										},
										"sink": {
											"name": "DeliveryDateKey",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "Salesperson Key",
											"type": "Int32"
										},
										"sink": {
											"name": "SalespersonKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "WWI Invoice ID",
											"type": "Int32"
										},
										"sink": {
											"name": "WWIInvoiceID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Package",
											"type": "String"
										},
										"sink": {
											"name": "Package",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Quantity",
											"type": "Decimal"
										},
										"sink": {
											"name": "Quantity",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Unit Price",
											"type": "Decimal"
										},
										"sink": {
											"name": "UnitPrice",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Rate",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxRate",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Excluding Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalExcludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Tax Amount",
											"type": "Decimal"
										},
										"sink": {
											"name": "TaxAmount",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Profit",
											"type": "Decimal"
										},
										"sink": {
											"name": "Profit",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Including Tax",
											"type": "Decimal"
										},
										"sink": {
											"name": "TotalIncludingTax",
											"type": "Decimal"
										}
									},
									{
										"source": {
											"name": "Total Dry Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalDryItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Total Chiller Items",
											"type": "Int32"
										},
										"sink": {
											"name": "TotalChillerItems",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Lineage Key",
											"type": "Int32"
										},
										"sink": {
											"name": "LineageKey",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "wwi_factsale_big_3_adls",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "wwi_perf_factsale_slow_asa",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-11-25T07:01:19Z"
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_1_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_perf_factsale_slow_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_2_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_4_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_factsale_big_3_adls')]",
				"[concat(variables('workspaceId'), '/linkedServices/asastore01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/cognitive_rest_dataset')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CognitiveRESTEndpoint",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": "text/analytics/v3.1/sentiment?opinionMining=true"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/CognitiveRESTEndpoint')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/external_postalcode_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "postalcodes.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "Zip",
						"type": "String"
					},
					{
						"name": "Latitude",
						"type": "String"
					},
					{
						"name": "Longitude",
						"type": "String"
					},
					{
						"name": "Timezone",
						"type": "String"
					},
					{
						"name": "DST",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/staging_enrichedcustomer_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "customer",
						"fileSystem": "staging"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_comments_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-comments.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimcity_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimcity.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "WWI City ID",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State Province",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Continent",
						"type": "String"
					},
					{
						"name": "Sales Territory",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "Subregion",
						"type": "String"
					},
					{
						"name": "Latest Recorded Population",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimcity_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWICityID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "City",
						"type": "nvarchar"
					},
					{
						"name": "StateProvince",
						"type": "nvarchar"
					},
					{
						"name": "Country",
						"type": "nvarchar"
					},
					{
						"name": "Continent",
						"type": "nvarchar"
					},
					{
						"name": "SalesTerritory",
						"type": "nvarchar"
					},
					{
						"name": "Region",
						"type": "nvarchar"
					},
					{
						"name": "Subregion",
						"type": "nvarchar"
					},
					{
						"name": "LatestRecordedPopulation",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimCity"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimcustomer_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimcustomer.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "WWI Customer ID",
						"type": "String"
					},
					{
						"name": "Customer",
						"type": "String"
					},
					{
						"name": "Bill To Customer",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Buying Group",
						"type": "String"
					},
					{
						"name": "Primary Contact",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimcustomer_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWICustomerID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Customer",
						"type": "nvarchar"
					},
					{
						"name": "BillToCustomer",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "BuyingGroup",
						"type": "nvarchar"
					},
					{
						"name": "PrimaryContact",
						"type": "nvarchar"
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimCustomer"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimdate_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimdate.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Day Number",
						"type": "String"
					},
					{
						"name": "Day",
						"type": "String"
					},
					{
						"name": "Month",
						"type": "String"
					},
					{
						"name": "Short Month",
						"type": "String"
					},
					{
						"name": "Calendar Month Number",
						"type": "String"
					},
					{
						"name": "Calendar Month Label",
						"type": "String"
					},
					{
						"name": "Calendar Year",
						"type": "String"
					},
					{
						"name": "Calendar Year Label",
						"type": "String"
					},
					{
						"name": "Fiscal Month Number",
						"type": "String"
					},
					{
						"name": "Fiscal Month Label",
						"type": "String"
					},
					{
						"name": "Fiscal Year",
						"type": "String"
					},
					{
						"name": "Fiscal Year Label",
						"type": "String"
					},
					{
						"name": "ISO Week Number",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimdate_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "DayNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Day",
						"type": "nvarchar"
					},
					{
						"name": "Month",
						"type": "nvarchar"
					},
					{
						"name": "ShortMonth",
						"type": "nvarchar"
					},
					{
						"name": "CalendarMonthNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarMonthLabel",
						"type": "nvarchar"
					},
					{
						"name": "CalendarYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CalendarYearLabel",
						"type": "nvarchar"
					},
					{
						"name": "FiscalMonthNumber",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalMonthLabel",
						"type": "nvarchar"
					},
					{
						"name": "FiscalYear",
						"type": "int",
						"precision": 10
					},
					{
						"name": "FiscalYearLabel",
						"type": "nvarchar"
					},
					{
						"name": "ISOWeekNumber",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimDate"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimemployee_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimemployee.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Employee Key",
						"type": "String"
					},
					{
						"name": "WWI Employee ID",
						"type": "String"
					},
					{
						"name": "Employee",
						"type": "String"
					},
					{
						"name": "Preferred Name",
						"type": "String"
					},
					{
						"name": "Is Salesperson",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimemployee_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "EmployeeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIEmployeeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Employee",
						"type": "nvarchar"
					},
					{
						"name": "PreferredName",
						"type": "nvarchar"
					},
					{
						"name": "IsSalesperson",
						"type": "bit"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimEmployee"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimpaymentmethod_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimpaymentmethod.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Payment Method Key",
						"type": "String"
					},
					{
						"name": "WWI Payment Method ID",
						"type": "String"
					},
					{
						"name": "Payment Method",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimpaymentmethod_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "PaymentMethodKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIPaymentMethodID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PaymentMethod",
						"type": "nvarchar"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimPaymentMethod"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimstockitem_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimstockitem.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "WWI Stock Item ID",
						"type": "String"
					},
					{
						"name": "Stock Item",
						"type": "String"
					},
					{
						"name": "Color",
						"type": "String"
					},
					{
						"name": "Selling Package",
						"type": "String"
					},
					{
						"name": "Buying Package",
						"type": "String"
					},
					{
						"name": "Brand",
						"type": "String"
					},
					{
						"name": "Size",
						"type": "String"
					},
					{
						"name": "Lead Time Days",
						"type": "String"
					},
					{
						"name": "Quantity Per Outer",
						"type": "String"
					},
					{
						"name": "Is Chiller Stock",
						"type": "String"
					},
					{
						"name": "Barcode",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Recommended Retail Price",
						"type": "String"
					},
					{
						"name": "Typical Weight Per Unit",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimstockitem_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIStockItemID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Stock Item",
						"type": "nvarchar"
					},
					{
						"name": "Color",
						"type": "nvarchar"
					},
					{
						"name": "SellingPackage",
						"type": "nvarchar"
					},
					{
						"name": "Buying Package",
						"type": "nvarchar"
					},
					{
						"name": "Brand",
						"type": "nvarchar"
					},
					{
						"name": "Size",
						"type": "nvarchar"
					},
					{
						"name": "LeadTimeDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QuantityPerOuter",
						"type": "int",
						"precision": 10
					},
					{
						"name": "IsChillerStock",
						"type": "bit"
					},
					{
						"name": "Barcode",
						"type": "nvarchar"
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "RecommendedRetailPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TypicalWeightPerUnit",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimStockItem"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimsupplier_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimsupplier.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Supplier Key",
						"type": "String"
					},
					{
						"name": "WWI Supplier ID",
						"type": "String"
					},
					{
						"name": "Supplier",
						"type": "String"
					},
					{
						"name": "Category",
						"type": "String"
					},
					{
						"name": "Primary Contact",
						"type": "String"
					},
					{
						"name": "Supplier Reference",
						"type": "String"
					},
					{
						"name": "Payment Days",
						"type": "String"
					},
					{
						"name": "Postal Code",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimsupplier_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SupplierKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWISupplierID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Supplier",
						"type": "nvarchar"
					},
					{
						"name": "Category",
						"type": "nvarchar"
					},
					{
						"name": "PrimaryContact",
						"type": "nvarchar"
					},
					{
						"name": "SupplierReference",
						"type": "nvarchar"
					},
					{
						"name": "PaymentDays",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PostalCode",
						"type": "nvarchar"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimSupplier"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimtransactiontype_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-dimtransactiontype.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Transaction Type Key",
						"type": "String"
					},
					{
						"name": "WWI Transaction Type ID",
						"type": "String"
					},
					{
						"name": "Transaction Type",
						"type": "String"
					},
					{
						"name": "Valid From",
						"type": "String"
					},
					{
						"name": "Valid To",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_dimtransactiontype_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TransactionTypeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWITransactionTypeID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionType",
						"type": "nvarchar"
					},
					{
						"name": "ValidFrom",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "ValidTo",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "DimTransactionType"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factmovement_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factmovement.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Movement Key",
						"type": "String"
					},
					{
						"name": "Date Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Supplier Key",
						"type": "String"
					},
					{
						"name": "Transaction Type Key",
						"type": "String"
					},
					{
						"name": "WWI Stock Item Transaction ID",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "WWI Purchase Order ID",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factmovement_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "MovementKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DateKey",
						"type": "date"
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionTypeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIStockItemTransactionID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIPurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactMovement"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factorder_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factorder.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Order Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Order Date Key",
						"type": "String"
					},
					{
						"name": "Picked Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "Picker Key",
						"type": "String"
					},
					{
						"name": "WWI Order ID",
						"type": "String"
					},
					{
						"name": "WWI Backorder ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factorder_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "OrderKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderDateKey",
						"type": "date"
					},
					{
						"name": "PickedDateKey",
						"type": "date"
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PickerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIBackorderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactOrder"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factpurchase_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factpurchase.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Purchase Key",
						"type": "String"
					},
					{
						"name": "Date Key",
						"type": "String"
					},
					{
						"name": "Supplier Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "WWI Purchase Order ID",
						"type": "String"
					},
					{
						"name": "Ordered Outers",
						"type": "String"
					},
					{
						"name": "Ordered Quantity",
						"type": "String"
					},
					{
						"name": "Received Outers",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Is Order Finalized",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factpurchase_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "PurchaseKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DateKey",
						"type": "date"
					},
					{
						"name": "SupplierKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIPurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderedOuters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "OrderedQuantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReceivedOuters",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "IsOrderFinalized",
						"type": "bit"
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactPurchase"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SaleKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDateKey",
						"type": "date"
					},
					{
						"name": "DeliveryDateKey",
						"type": "date"
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalDryItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalChillerItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactSale"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_big_1_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale-big-1.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_big_2_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale-big-2.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_big_3_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale-big-3.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factsale_big_4_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factsale-big-4.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Sale Key",
						"type": "String"
					},
					{
						"name": "City Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Stock Item Key",
						"type": "String"
					},
					{
						"name": "Invoice Date Key",
						"type": "String"
					},
					{
						"name": "Delivery Date Key",
						"type": "String"
					},
					{
						"name": "Salesperson Key",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "Description",
						"type": "String"
					},
					{
						"name": "Package",
						"type": "String"
					},
					{
						"name": "Quantity",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Tax Rate",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Profit",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Total Dry Items",
						"type": "String"
					},
					{
						"name": "Total Chiller Items",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factstockholding_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-factstockholding.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Stock Holding Key|Stock Item Key|Quantity On Hand|Bin Location|Last Stocktake Quantity|Last Cost Price|Reorder Level|Target Stock Level|Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_factstockholding_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "StockHoldingKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "QuantityOnHand",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BinLocation",
						"type": "nvarchar"
					},
					{
						"name": "LastStocktakeQuantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LastCostPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "ReorderLevel",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TargetStockLevel",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactStockHolding"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_facttransaction_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "wwi-facttransaction.csv",
						"folderPath": "bronze",
						"fileSystem": "dev"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": [
					{
						"name": "Transaction Key",
						"type": "String"
					},
					{
						"name": "Date Key",
						"type": "String"
					},
					{
						"name": "Customer Key",
						"type": "String"
					},
					{
						"name": "Bill To Customer Key",
						"type": "String"
					},
					{
						"name": "Supplier Key",
						"type": "String"
					},
					{
						"name": "Transaction Type Key",
						"type": "String"
					},
					{
						"name": "Payment Method Key",
						"type": "String"
					},
					{
						"name": "WWI Customer Transaction ID",
						"type": "String"
					},
					{
						"name": "WWI Supplier Transaction ID",
						"type": "String"
					},
					{
						"name": "WWI Invoice ID",
						"type": "String"
					},
					{
						"name": "WWI Purchase Order ID",
						"type": "String"
					},
					{
						"name": "Supplier Invoice Number",
						"type": "String"
					},
					{
						"name": "Total Excluding Tax",
						"type": "String"
					},
					{
						"name": "Tax Amount",
						"type": "String"
					},
					{
						"name": "Total Including Tax",
						"type": "String"
					},
					{
						"name": "Outstanding Balance",
						"type": "String"
					},
					{
						"name": "Is Finalized",
						"type": "String"
					},
					{
						"name": "Lineage Key",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_facttransaction_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "TransactionKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "DateKey",
						"type": "date"
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TransactionTypeKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PaymentMethodKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWICustomerTransaction ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWISupplierTransaction ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIPurchaseOrderID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "SupplierInvoiceNumber",
						"type": "nvarchar"
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "OutstandingBalance",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "IsFinalized",
						"type": "bit"
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi",
					"table": "FactTransaction"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_perf_factsale_fast_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SaleKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDateKey",
						"type": "date"
					},
					{
						"name": "DeliveryDateKey",
						"type": "date"
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalDryItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalChillerItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi_perf",
					"table": "FactSale_Fast"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_perf_factsale_slow_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "SaleKey",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "CityKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "BillToCustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "StockItemKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "InvoiceDateKey",
						"type": "date"
					},
					{
						"name": "DeliveryDateKey",
						"type": "date"
					},
					{
						"name": "SalespersonKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WWIInvoiceID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Description",
						"type": "nvarchar"
					},
					{
						"name": "Package",
						"type": "nvarchar"
					},
					{
						"name": "Quantity",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UnitPrice",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxRate",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "TotalExcludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TaxAmount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Profit",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalIncludingTax",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "TotalDryItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TotalChillerItems",
						"type": "int",
						"precision": 10
					},
					{
						"name": "LineageKey",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "wwi_perf",
					"table": "FactSale_Slow"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_sale_small_telemetry_ade')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadataexplorer801100",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureDataExplorerTable",
				"schema": [
					{
						"name": "CustomerId",
						"type": "int"
					},
					{
						"name": "ProductId",
						"type": "int"
					},
					{
						"name": "Timestamp",
						"type": "datetime"
					},
					{
						"name": "Url",
						"type": "string"
					}
				],
				"typeProperties": {
					"table": "SalesTelemetry"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadataexplorer801100')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_sale_small_telemetry_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "sale-small-telemetry",
						"fileSystem": "wwi"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "CustomerId",
						"type": "String"
					},
					{
						"name": "ProductId",
						"type": "String"
					},
					{
						"name": "Timestamp",
						"type": "String"
					},
					{
						"name": "Url",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_sentiments_adls')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "asadatalake01",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "bronze/sentiment",
						"fileSystem": "dev"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/asadatalake01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_staging_dimcustomer_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"UniqueId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "wwi_staging",
					"table": {
						"value": "@concat('DimCustomer_',dataset().UniqueId)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/wwi_staging_enrichedcustomer_asa')]",
			"type": "Microsoft.Synapse/workspaces/datasets",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sqlpool01",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"UniqueId": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": "wwi_staging",
					"table": {
						"value": "@concat('EnrichedCustomer_', dataset().UniqueId)",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/linkedServices/sqlpool01')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CognitiveRESTEndpoint')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('CognitiveRESTEndpoint_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/CognitiveService')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "CognitiveService",
				"typeProperties": {
					"subscriptionId": "[parameters('CognitiveService_properties_typeProperties_subscriptionId')]",
					"resourceGroup": "Synapse-AIAD-801100",
					"csName": "cogs-801100",
					"csKind": "TextAnalytics",
					"csLocation": "southeastasia",
					"endPoint": "https://cogs-801100.cognitiveservices.azure.com/",
					"csKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "KeyVault",
							"type": "LinkedServiceReference"
						},
						"secretName": "CognitiveKey"
					}
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]",
				"[concat(variables('workspaceId'), '/linkedServices/KeyVault')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/KeyVault')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('KeyVault_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/PowerBIWorkspace')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "PowerBIWorkspace",
				"typeProperties": {
					"workspaceID": "6fa68a8a-d101-4f17-bca7-ca8502ff73ab"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asadataexplorer801100')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureDataExplorer",
				"typeProperties": {
					"endpoint": "https://asadataexplorer801100.asaworkspace801100.kusto.azuresynapse.net",
					"database": "[parameters('asadataexplorer801100_properties_typeProperties_database')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asadatalake01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('asadatalake01_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('asadatalake01_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asamlworkspace801100')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureMLService",
				"typeProperties": {
					"subscriptionId": "[parameters('asamlworkspace801100_properties_typeProperties_subscriptionId')]",
					"resourceGroupName": "[parameters('asamlworkspace801100_properties_typeProperties_resourceGroupName')]",
					"mlWorkspaceName": "asamlworkspace801100",
					"authentication": "MSI"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asastore01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('asastore01_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaworkspace801100-WorkspaceDefaultSqlServer')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('asaworkspace801100-WorkspaceDefaultSqlServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/asaworkspace801100-WorkspaceDefaultStorage')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('asaworkspace801100-WorkspaceDefaultStorage_properties_typeProperties_url')]"
				},
				"connectVia": {
					"referenceName": "AutoResolveIntegrationRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/integrationRuntimes/AutoResolveIntegrationRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/sqlpool01')]",
			"type": "Microsoft.Synapse/workspaces/linkedServices",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('sqlpool01_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/AutoResolveIntegrationRuntime')]",
			"type": "Microsoft.Synapse/workspaces/integrationRuntimes",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 0
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/EnrichCustomerData')]",
			"type": "Microsoft.Synapse/workspaces/dataflows",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "external_postalcode_adls",
								"type": "DatasetReference"
							},
							"name": "PostalCodes"
						},
						{
							"dataset": {
								"referenceName": "wwi_staging_dimcustomer_asa",
								"type": "DatasetReference"
							},
							"name": "DimCustomer"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "wwi_staging_enrichedcustomer_asa",
								"type": "DatasetReference"
							},
							"name": "EnrichedCustomerData"
						},
						{
							"dataset": {
								"referenceName": "staging_enrichedcustomer_adls",
								"type": "DatasetReference"
							},
							"name": "EnrichedCustomerDataAdls"
						}
					],
					"transformations": [
						{
							"name": "PostalCodeFilter"
						},
						{
							"name": "JoinOnPostalCode"
						},
						{
							"name": "SelectDesiredColumns"
						}
					],
					"script": "parameters{\n\tUniqueId as string\n}\nsource(output(\n\t\tCity as string,\n\t\tState as string,\n\t\tZip as string,\n\t\tLatitude as double,\n\t\tLongitude as double,\n\t\tTimezone as short,\n\t\tDST as boolean\n\t),\n\tallowSchemaDrift: false,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> PostalCodes\nsource(output(\n\t\tCustomerKey as integer,\n\t\tWWICustomerID as integer,\n\t\tCustomer as string,\n\t\tBillToCustomer as string,\n\t\tCategory as string,\n\t\tBuyingGroup as string,\n\t\tPrimaryContact as string,\n\t\tPostalCode as string,\n\t\tValidFrom as timestamp,\n\t\tValidTo as timestamp,\n\t\tLineageKey as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table',\n\tstaged: false) ~> DimCustomer\nPostalCodes filter(and(\n    greaterOrEqual(toInteger(Zip), 90000),\n    lesserOrEqual(toInteger(Zip), 98000)\n)) ~> PostalCodeFilter\nDimCustomer, PostalCodeFilter join(PostalCode == Zip,\n\tjoinType:'inner',\n\tmatchType:'exact',\n\tignoreSpaces: false,\n\tbroadcast: 'auto')~> JoinOnPostalCode\nJoinOnPostalCode select(mapColumn(\n\t\tCustomerKey,\n\t\tWWICustomerID,\n\t\tCustomer,\n\t\tBillToCustomer,\n\t\tCategory,\n\t\tBuyingGroup,\n\t\tPrimaryContact,\n\t\tPostalCode,\n\t\tValidFrom,\n\t\tValidTo,\n\t\tLineageKey,\n\t\tCity,\n\t\tState,\n\t\tLatitude,\n\t\tLongitude,\n\t\tTimezone,\n\t\tDST\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectDesiredColumns\nSelectDesiredColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\trecreate:true,\n\tformat: 'table',\n\tstaged: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\terrorHandlingOption: 'stopOnFirstError',\n\tpartitionBy('hash', 1)) ~> EnrichedCustomerData\nSelectDesiredColumns sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'parquet',\n\tpartitionFileNames:[(concat('enrichedcustomer_', $UniqueId, '.parquet'))],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tpartitionBy('hash', 1)) ~> EnrichedCustomerDataAdls"
				}
			},
			"dependsOn": [
				"[concat(variables('workspaceId'), '/datasets/external_postalcode_adls')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_staging_dimcustomer_asa')]",
				"[concat(variables('workspaceId'), '/datasets/wwi_staging_enrichedcustomer_asa')]",
				"[concat(variables('workspaceId'), '/datasets/staging_enrichedcustomer_adls')]"
			]
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WorkspaceSystemIdentity')]",
			"type": "Microsoft.Synapse/workspaces/credentials",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 1 - Read with SQL on-demand')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE EXTERNAL DATA SOURCE WwiDataADLS\nWITH (LOCATION = 'abfss://wwi@asadatalake801100.dfs.core.windows.net') ;\nGO\n--Define un formato para el archivo de destino\nCREATE EXTERNAL FILE FORMAT CsvFormat\nWITH ( \n    FORMAT_TYPE = DELIMITEDTEXT, \n    FORMAT_OPTIONS ( FIELD_TERMINATOR = ',', STRING_DELIMITER = '\"')\n);\nGO\n--Define el destino de la consulta\nCREATE EXTERNAL TABLE QuarterlySales\nWITH (\n    LOCATION = 'quarterly-sales',\n    DATA_SOURCE = WwiDataADLS,\n    FILE_FORMAT = CsvFormat\n)\nAS\nSELECT \n     InvoiceYear,\n     InvoiceQuarter,\n     Sum(cast([Quantity] as int)) as SalesQuantity\nFROM\n    OPENROWSET(\n        BULK 'https://asadatalake801100.dfs.core.windows.net/wwi/factsale-deltalake',\n        FORMAT = 'DELTA'\n    ) AS [result]\nWHERE InvoiceYear=2012\nGROUP BY\n     InvoiceYear,\n     InvoiceQuarter",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLOnDemand01",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 4 - Analyze Transactions')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT \r\n    CustomerKey, \r\n    SUM(Quantity) as Quantity\r\nFROM \r\n    wwi.FactSale\r\nGROUP BY \r\n    CustomerKey",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 4 - Investigate query performance')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT  count(*) from wwi_perf.FactSale_Slow\n\nSELECT  count(*) from wwi_perf.FactSale_Fast\n\n--7 segundos (distribución Round robin)\nSELECT\n    FS.CustomerKey\n    ,MIN(FS.Quantity) as MinQuantity\n    ,MAX(FS.Quantity) as MaxQuantity\n    ,AVG(FS.TaxRate) as AvgTaxRate\n    ,AVG(FS.TaxAmount) as AvgTaxAmount\n    ,AVG(FS.TotalExcludingTax) as AverageSaleWithoutTax\n    ,AVG(FS.TotalIncludingTax) as AverageSaleWithTax\n    ,COUNT(DISTINCT FS.StockItemKey) as DistinctStockItems\n    ,COUNT(DISTINCT DC.Country) as DistinctCountries\nFROM\n    wwi_perf.FactSale_Slow FS\n    join wwi.DimCity DC ON\n        DC.CityKey = FS.CityKey\nGROUP BY\n    FS.CustomerKey\n\n--3 segundos debido a la distribución de los datos por HASH (Hash distributed)\nSELECT\n    FS.CustomerKey\n    ,MIN(FS.Quantity) as MinQuantity\n    ,MAX(FS.Quantity) as MaxQuantity\n    ,AVG(FS.TaxRate) as AvgTaxRate\n    ,AVG(FS.TaxAmount) as AvgTaxAmount\n    ,AVG(FS.TotalExcludingTax) as AverageSaleWithoutTax\n    ,AVG(FS.TotalIncludingTax) as AverageSaleWithTax\n    ,COUNT(DISTINCT FS.StockItemKey) as DistinctStockItems\n    ,COUNT(DISTINCT DC.Country) as DistinctCountries\nFROM\n    wwi_perf.FactSale_Fast FS\n    join wwi.DimCity DC ON\n        DC.CityKey = FS.CityKey\nGROUP BY\n    FS.CustomerKey",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLPool01",
						"poolName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 5 - Create Sample Data for Predict')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "DROP TABLE [wwi].[SampleData]; \r\nGO\r\n\r\nCREATE TABLE [wwi].[SampleData] \r\n(\r\n    [customerkey] REAL, \r\n    [stockitemkey] REAL\r\n);\r\nGO\r\n\r\nINSERT INTO [wwi].[SampleData] ([customerkey], [stockitemkey])\r\nVALUES ( 11, 1 );\r\nGO\r\n\r\nSELECT * FROM [wwi].[SampleData];\r\nGO\r\n\r\nCREATE TABLE [wwi].[SampleData] \r\n(\r\n    [features] REAL,\r\n    [features2] REAL\r\n);\r\nGO\r\n\r\nINSERT INTO [wwi].[SampleData] ([features], [features2])\r\nVALUES ( 11, 1 );\r\nGO\r\n\r\nSELECT * FROM [wwi].[SampleData];\r\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 5 - Predict with model')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Retrieve the latest hex encoded ONNX model from the table\r\nDECLARE @model varbinary(max) = (SELECT Model FROM [wwi].[Models] WHERE Id = (SELECT Top(1) max(ID) FROM [wwi].[Models]));\r\n\r\n-- Run a prediction query\r\nSELECT d.*, p.*\r\nFROM PREDICT(MODEL = @model, DATA = [wwi].[SampleData] AS d) WITH (prediction real) AS p;\r\n\r\n-- Store a batch of predictions\r\nINSERT INTO PredictionResults\r\nSELECT d.*, p.Score\r\nFROM PREDICT(MODEL = @model, DATA = [wwi].[SampleData] AS d) WITH (prediction real) AS p;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 5 - Register model')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- Use poly to load model into the model table\r\nCREATE MASTER KEY ENCRYPTION BY PASSWORD = 'fQv2fKq#FN7r'\r\n\r\n-- Create a database scoped credential with Azure storage account key (not a Shared Access Signature) as the secret.\r\nCREATE DATABASE SCOPED CREDENTIAL StorageCredential\r\nWITH\r\nIDENTITY = 'SHARED ACCESS SIGNATURE'\r\n, SECRET = 'xUgcgrs6WzL5DjS9+1n3NE4wtCV+Gcrg7SOqOh8uuzYR0hdPMSBpIaGAVKeJx9eIiXWFfG4xPLlb+AStbKjLFQ=='\r\n;\r\n\r\n-- Create an external data source with CREDENTIAL option.\r\nCREATE EXTERNAL DATA SOURCE ModelStorage\r\nWITH\r\n( LOCATION = 'wasbs://models@asastore801100.blob.core.windows.net'\r\n, CREDENTIAL = StorageCredential\r\n, TYPE = HADOOP\r\n)\r\n;\r\nCREATE EXTERNAL FILE FORMAT csv\r\nWITH (\r\nFORMAT_TYPE = DELIMITEDTEXT,\r\nFORMAT_OPTIONS (\r\nFIELD_TERMINATOR = ',',\r\nSTRING_DELIMITER = '',\r\nDATE_FORMAT = '',\r\nUSE_TYPE_DEFAULT = False\r\n)\r\n);\r\n\r\n\r\nCREATE EXTERNAL TABLE [wwi_ml].[MLModelExt]\r\n(\r\n[Model] [varbinary](max) NULL\r\n)\r\nWITH\r\n(\r\nLOCATION='/hex' ,\r\nDATA_SOURCE = ModelStorage ,\r\nFILE_FORMAT = csv ,\r\nREJECT_TYPE = VALUE ,\r\nREJECT_VALUE = 0\r\n)\r\nGO\r\n\r\n-- Verify access by running query\r\nSELECT Model, 'A simple model.'\r\nFROM wwi_ml.MLModelExt\r\n\r\n\r\nCREATE TABLE [wwi_ml].[MLModel]\r\n(\r\n[Id] [int] IDENTITY(1,1) NOT NULL,\r\n[Model] [varbinary](max) NULL,\r\n[Description] [varchar](200) NULL\r\n)\r\nWITH\r\n(\r\nDISTRIBUTION = REPLICATE,\r\nheap\r\n)\r\nGO\r\n\r\nINSERT INTO [wwi_ml].[MLModel]\r\nSELECT Model, 'A linear regression model.'\r\nFROM [wwi_ml].[MLModelExt]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 1')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE DATABASE SQLOnDemand01\r\nCREATE CREDENTIAL [https://asadatalake801100.dfs.core.windows.net]\r\nWITH IDENTITY='User Identity';",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 2')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE LOGIN [asa.sql.staging]\r\nWITH PASSWORD = 'password.1!!'\r\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 3')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE USER [asa.sql.staging]\r\n    FOR LOGIN [asa.sql.staging]\r\n    WITH DEFAULT_SCHEMA = dbo\r\nGO\r\n\r\n-- Add user to the required roles\r\n\r\nEXEC sp_addrolemember N'db_datareader', N'asa.sql.staging'\r\nGO\r\n\r\nEXEC sp_addrolemember N'db_datawriter', N'asa.sql.staging'\r\nGO\r\n\r\nEXEC sp_addrolemember N'db_ddladmin', N'asa.sql.staging'\r\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 4')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE USER [asaworkspace801100] FROM EXTERNAL PROVIDER;\r\n\r\n--Granting permission to the identity\r\nGRANT CONTROL ON DATABASE::SQLPool01 TO [asaworkspace801100];",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 5')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE LOGIN [<purview_workspace_name>] FROM EXTERNAL PROVIDER;",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQL script 6')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "CREATE USER [<purview_workspace_name>] FROM EXTERNAL PROVIDER\r\nGO\r\n\r\nEXEC sp_addrolemember 'db_datareader', [<purview_workspace_name>]\r\nGO",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Task1 - Check new table from other selec')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT * FROM QuarterlySales",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLOnDemand01",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Task2 - Check new table from notebook')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT TOP (100) [SaleKey]\n,[CityKey]\n,[CustomerKey]\n,[BillToCustomerKey]\n,[StockItemKey]\n,[DeliveryDateKey]\n,[SalespersonKey]\n,[WWIInvoiceID]\n,[Description]\n,[Package]\n,[Quantity]\n,[UnitPrice]\n,[TaxRate]\n,[TotalExcludingTax]\n,[TaxAmount]\n,[Profit]\n,[TotalIncludingTax]\n,[TotalDryItems]\n,[TotalChillerItems]\n,[LineageKey]\n,[InvoiceDateKey]\n FROM [wwi_staging].[Sale]",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "SQLPool01",
						"poolName": "SQLPool01"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Task2_3 - Select data from dataflow ingestion')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "-- This is auto-generated code\nSELECT TOP 100\n    jsonContent\n\t, JSON_VALUE (jsonContent, '$.documents[0].sentiment') as Sentiment\n\t, JSON_VALUE (jsonContent, '$.documents[0].id') as CustomerID\n\nFROM\n    OPENROWSET(\n        BULK (\n            'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_0ec6d383-a91d-4d74-8232-858c78e82504_1593c6d6-d702-4eee-aa35-1a875221c692.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_15aad353-9b46-448d-8cbc-13d8e58b8bde_33e89105-c7ff-48a6-ae5b-5208c38156f0.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_1c83f93a-cdee-4154-9fe9-788e101b9f22_151bcaab-4a7d-4f18-ba64-f5e89450e6f7.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_227ff5f2-c1b4-4f60-9356-0935b4705bb5_da368c6a-2392-442c-b6fc-f09c583ea85e.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_38d2a272-6392-4204-8754-f039ed49f80f_9a9a8bb8-406c-4102-a040-54d4b0d189e1.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_44614e4c-1064-421f-b8a4-8be067a78bcb_999cccde-307d-45da-8edc-1475af3bb4dc.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_5befafb4-2d44-4de7-966f-b1c00100e79f_b6b1e999-652e-459b-8be2-36b820b6a64e.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_5c473150-2cb9-4e07-85e6-80e7e12bc821_af6990e2-280f-4e0b-9342-2fa1184c82c8.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_6e593ce3-aae4-4cc4-91a1-8fd1990b0316_695eb213-7f22-48ac-afb9-87ccee9f1248.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_91fb535f-4c8e-41b4-873c-1ccb558b66a0_0920f156-74ae-4492-8a8e-6f5d31281edd.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_b1f84658-0a0f-44bd-a511-93439a70872f_30843c81-8bac-4d87-9e52-fcc9a60d4b4e.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_b6cc8a16-6d99-4f77-8d34-31f94adf6345_8bb443a2-00e3-4602-827f-c0ecbad85291.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_c52d5650-6156-44f6-9e04-0abfb1d867ad_949c7b8e-0822-4c0c-adeb-222426e459c1.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_d9a012d4-95a9-4941-8d8a-28c54da991d7_221b877a-b9b8-4bd2-b48b-e8ce129bd2a5.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_e10e6396-95e6-4751-8412-888f6ed1f79a_f768dbcf-5435-47a6-b8ff-6fd06efa341d.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_e540a339-093e-4c88-b6f0-dec950bf7de2_2575c329-f8fc-4b9c-b1ff-291d1fa71e24.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_e9efef1f-b519-43fd-9d83-1fcb65b60b06_c0fcdf06-f361-490a-a76a-bf2ae1d36eb0.json',\n\t\t\t'https://asadatalake801100.dfs.core.windows.net/dev/bronze/sentiment/data_fb5695ea-b354-4608-b951-8cf4d1a6bca1_57157af1-a7c5-4933-852a-250e0f0941bc.json'\n        ),\n        FORMAT = 'CSV',\n        FIELDQUOTE = '0x0b',\n        FIELDTERMINATOR ='0x0b',\n        ROWTERMINATOR = '0x0b'\n    )\n    WITH (\n        jsonContent varchar(MAX)\n    ) AS [result]\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "master",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Task4_1 - Query Lake Database')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "SELECT COUNT(*) FROM FactSales",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"databaseName": "default",
						"poolName": "Built-in"
					},
					"resultLimit": 5000
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/WWI-Reset-SQLPoolSchema')]",
			"type": "Microsoft.Synapse/workspaces/sqlscripts",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"content": {
					"query": "create schema wwi\r\ngo\r\ncreate schema wwi_perf\r\ngo\r\ncreate schema wwi_staging\r\ngo\r\ncreate schema wwi_ml\r\ngo\r\n\r\nIF OBJECT_ID('wwi.DimCity', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimCity\r\nGO\r\n\r\n--Location was eliminated (data type geography not supported)\r\n\r\nCREATE TABLE [wwi].[DimCity]\r\n(\r\n    [CityKey] [int] NOT NULL,\r\n\t[WWICityID] [int] NOT NULL,\r\n\t[City] [nvarchar](50) NOT NULL,\r\n\t[StateProvince] [nvarchar](50) NOT NULL,\r\n\t[Country] [nvarchar](60) NOT NULL,\r\n\t[Continent] [nvarchar](30) NOT NULL,\r\n\t[SalesTerritory] [nvarchar](50) NOT NULL,\r\n\t[Region] [nvarchar](30) NOT NULL,\r\n\t[Subregion] [nvarchar](30) NOT NULL,\r\n\t[LatestRecordedPopulation] [bigint] NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimCustomer', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimCustomer\r\nGO\r\n\r\nCREATE TABLE [wwi].[DimCustomer](\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[WWICustomerID] [int] NOT NULL,\r\n\t[Customer] [nvarchar](100) NOT NULL,\r\n\t[BillToCustomer] [nvarchar](100) NOT NULL,\r\n\t[Category] [nvarchar](50) NOT NULL,\r\n\t[BuyingGroup] [nvarchar](50) NOT NULL,\r\n\t[PrimaryContact] [nvarchar](50) NOT NULL,\r\n\t[PostalCode] [nvarchar](10) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimDate', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimDate\r\nGO\r\n\r\nCREATE TABLE [wwi].[DimDate](\r\n\t[Date] [date] NOT NULL,\r\n\t[DayNumber] [int] NOT NULL,\r\n\t[Day] [nvarchar](10) NOT NULL,\r\n\t[Month] [nvarchar](10) NOT NULL,\r\n\t[ShortMonth] [nvarchar](3) NOT NULL,\r\n\t[CalendarMonthNumber] [int] NOT NULL,\r\n\t[CalendarMonthLabel] [nvarchar](20) NOT NULL,\r\n\t[CalendarYear] [int] NOT NULL,\r\n\t[CalendarYearLabel] [nvarchar](10) NOT NULL,\r\n\t[FiscalMonthNumber] [int] NOT NULL,\r\n\t[FiscalMonthLabel] [nvarchar](20) NOT NULL,\r\n\t[FiscalYear] [int] NOT NULL,\r\n\t[FiscalYearLabel] [nvarchar](10) NOT NULL,\r\n\t[ISOWeekNumber] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimEmployee', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimEmployee\r\nGO\r\n\r\n-- Photo was eliminated (data type varbinary cannot participate in a columnstore index)\r\n\r\nCREATE TABLE [wwi].[DimEmployee](\r\n\t[EmployeeKey] [int] NOT NULL,\r\n\t[WWIEmployeeID] [int] NOT NULL,\r\n\t[Employee] [nvarchar](50) NOT NULL,\r\n\t[PreferredName] [nvarchar](50) NOT NULL,\r\n\t[IsSalesperson] [bit] NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimPaymentMethod', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimPaymentMethod\r\nGO\r\n\r\nCREATE TABLE [wwi].[DimPaymentMethod](\r\n\t[PaymentMethodKey] [int] NOT NULL,\r\n\t[WWIPaymentMethodID] [int] NOT NULL,\r\n\t[PaymentMethod] [nvarchar](50) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimStockItem', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimStockItem\r\nGO\r\n\r\n-- Photo was eliminated (data type varbinary cannot participate in a columnstore index)\r\n\r\nCREATE TABLE [wwi].[DimStockItem](\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[WWIStockItemID] [int] NOT NULL,\r\n\t[Stock Item] [nvarchar](100) NOT NULL,\r\n\t[Color] [nvarchar](20) NOT NULL,\r\n\t[SellingPackage] [nvarchar](50) NOT NULL,\r\n\t[Buying Package] [nvarchar](50) NOT NULL,\r\n\t[Brand] [nvarchar](50) NOT NULL,\r\n\t[Size] [nvarchar](20) NOT NULL,\r\n\t[LeadTimeDays] [int] NOT NULL,\r\n\t[QuantityPerOuter] [int] NOT NULL,\r\n\t[IsChillerStock] [bit] NOT NULL,\r\n\t[Barcode] [nvarchar](50) NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[RecommendedRetailPrice] [decimal](18, 2) NULL,\r\n\t[TypicalWeightPerUnit] [decimal](18, 3) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimSupplier', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimSupplier\r\nGO\r\n\r\n\r\nCREATE TABLE [wwi].[DimSupplier](\r\n\t[SupplierKey] [int] NOT NULL,\r\n\t[WWISupplierID] [int] NOT NULL,\r\n\t[Supplier] [nvarchar](100) NOT NULL,\r\n\t[Category] [nvarchar](50) NOT NULL,\r\n\t[PrimaryContact] [nvarchar](50) NOT NULL,\r\n\t[SupplierReference] [nvarchar](20) NULL,\r\n\t[PaymentDays] [int] NOT NULL,\r\n\t[PostalCode] [nvarchar](10) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.DimTransactionType', 'U') IS NOT NULL\r\n    DROP TABLE wwi.DimTransactionType\r\nGO\r\n\r\nCREATE TABLE [wwi].[DimTransactionType](\r\n\t[TransactionTypeKey] [int] NOT NULL,\r\n\t[WWITransactionTypeID] [int] NOT NULL,\r\n\t[TransactionType] [nvarchar](50) NOT NULL,\r\n\t[ValidFrom] [datetime2](7) NOT NULL,\r\n\t[ValidTo] [datetime2](7) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = REPLICATE\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactMovement', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactMovement\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactMovement](\r\n\t[MovementKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[DateKey] [date] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NULL,\r\n\t[SupplierKey] [int] NULL,\r\n\t[TransactionTypeKey] [int] NOT NULL,\r\n\t[WWIStockItemTransactionID] [int] NOT NULL,\r\n\t[WWIInvoiceID] [int] NULL,\r\n\t[WWIPurchaseOrderID] [int] NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactOrder', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactOrder\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactOrder](\r\n\t[OrderKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[CityKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[OrderDateKey] [date] NOT NULL,\r\n\t[PickedDateKey] [date] NULL,\r\n\t[SalespersonKey] [int] NOT NULL,\r\n\t[PickerKey] [int] NULL,\r\n\t[WWIOrderID] [int] NOT NULL,\r\n\t[WWIBackorderID] [int] NULL,\r\n\t[Description] [nvarchar](100) NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactPurchase', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactPurchase\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactPurchase](\r\n\t[PurchaseKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[DateKey] [date] NOT NULL,\r\n\t[SupplierKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[WWIPurchaseOrderID] [int] NULL,\r\n\t[OrderedOuters] [int] NOT NULL,\r\n\t[OrderedQuantity] [int] NOT NULL,\r\n\t[ReceivedOuters] [int] NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[IsOrderFinalized] [bit] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([SupplierKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactSale', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactSale\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactSale](\r\n\t[SaleKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[CityKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[BillToCustomerKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[InvoiceDateKey] [date] NOT NULL,\r\n\t[DeliveryDateKey] [date] NULL,\r\n\t[SalespersonKey] [int] NOT NULL,\r\n\t[WWIInvoiceID] [int] NOT NULL,\r\n\t[Description] [nvarchar](100) NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[Profit] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TotalDryItems] [int] NOT NULL,\r\n\t[TotalChillerItems] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi_perf.FactSale_Slow', 'U') IS NOT NULL\r\n    DROP TABLE wwi_perf.FactSale\r\nGO\r\n\r\nCREATE TABLE [wwi_perf].[FactSale_Slow](\r\n\t[SaleKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[CityKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[BillToCustomerKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[InvoiceDateKey] [date] NOT NULL,\r\n\t[DeliveryDateKey] [date] NULL,\r\n\t[SalespersonKey] [int] NOT NULL,\r\n\t[WWIInvoiceID] [int] NOT NULL,\r\n\t[Description] [nvarchar](100) NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[Profit] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TotalDryItems] [int] NOT NULL,\r\n\t[TotalChillerItems] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = ROUND_ROBIN,\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi_perf.FactSale_Fast', 'U') IS NOT NULL\r\n    DROP TABLE wwi_perf.FactSale_Fast\r\nGO\r\n\r\nCREATE TABLE [wwi_perf].[FactSale_Fast](\r\n\t[SaleKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[CityKey] [int] NOT NULL,\r\n\t[CustomerKey] [int] NOT NULL,\r\n\t[BillToCustomerKey] [int] NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[InvoiceDateKey] [date] NOT NULL,\r\n\t[DeliveryDateKey] [date] NULL,\r\n\t[SalespersonKey] [int] NOT NULL,\r\n\t[WWIInvoiceID] [int] NOT NULL,\r\n\t[Description] [nvarchar](100) NOT NULL,\r\n\t[Package] [nvarchar](50) NOT NULL,\r\n\t[Quantity] [int] NOT NULL,\r\n\t[UnitPrice] [decimal](18, 2) NOT NULL,\r\n\t[TaxRate] [decimal](18, 3) NOT NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[Profit] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TotalDryItems] [int] NOT NULL,\r\n\t[TotalChillerItems] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactStockHolding', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactStockHolding\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactStockHolding](\r\n\t[StockHoldingKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[StockItemKey] [int] NOT NULL,\r\n\t[QuantityOnHand] [int] NOT NULL,\r\n\t[BinLocation] [nvarchar](20) NOT NULL,\r\n\t[LastStocktakeQuantity] [int] NOT NULL,\r\n\t[LastCostPrice] [decimal](18, 2) NOT NULL,\r\n\t[ReorderLevel] [int] NOT NULL,\r\n\t[TargetStockLevel] [int] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([StockItemKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\nIF OBJECT_ID('wwi.FactTransaction', 'U') IS NOT NULL\r\n    DROP TABLE wwi.FactTransaction\r\nGO\r\n\r\nCREATE TABLE [wwi].[FactTransaction](\r\n\t[TransactionKey] [bigint] IDENTITY(1,1) NOT NULL,\r\n\t[DateKey] [date] NOT NULL,\r\n\t[CustomerKey] [int] NULL,\r\n\t[BillToCustomerKey] [int] NULL,\r\n\t[SupplierKey] [int] NULL,\r\n\t[TransactionTypeKey] [int] NOT NULL,\r\n\t[PaymentMethodKey] [int] NULL,\r\n\t[WWICustomerTransaction ID] [int] NULL,\r\n\t[WWISupplierTransaction ID] [int] NULL,\r\n\t[WWIInvoiceID] [int] NULL,\r\n\t[WWIPurchaseOrderID] [int] NULL,\r\n\t[SupplierInvoiceNumber] [nvarchar](20) NULL,\r\n\t[TotalExcludingTax] [decimal](18, 2) NOT NULL,\r\n\t[TaxAmount] [decimal](18, 2) NOT NULL,\r\n\t[TotalIncludingTax] [decimal](18, 2) NOT NULL,\r\n\t[OutstandingBalance] [decimal](18, 2) NOT NULL,\r\n\t[IsFinalized] [bit] NOT NULL,\r\n\t[LineageKey] [int] NOT NULL\r\n)\r\nWITH\r\n(\r\n    DISTRIBUTION = HASH ([CustomerKey]),\r\n    CLUSTERED COLUMNSTORE INDEX\r\n)\r\nGO\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
					"metadata": {
						"language": "sql"
					},
					"currentConnection": {
						"name": "SQLPool01",
						"type": "SqlPool"
					}
				},
				"type": "SqlQuery"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 2 - Bonus Notebook with CSharp')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool02",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "c5c8990a-57d8-4c35-9b5e-6c10e5172cc1"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1"
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "csharp"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/f43f70f1-af80-4cd6-8ee6-e2f20bd5a8bf/resourceGroups/Synapse-AIAD-801100/providers/Microsoft.Synapse/workspaces/asaworkspace801100/bigDataPools/SparkPool02",
						"name": "SparkPool02",
						"type": "Spark",
						"endpoint": "https://asaworkspace801100.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool02",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 60
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"// Configure the connection to the data lake\n",
							"var adlsPath = \"abfss://wwi@asadatalake801100.dfs.core.windows.net\";"
						],
						"outputs": [],
						"execution_count": 1
					},
					{
						"cell_type": "code",
						"source": [
							"// Import the sales data from the data lake\n",
							"var sales = spark.Read().Option(\"header\", \"true\").Option(\"inferSchema\", \"true\").Option(\"sep\", \"|\").Csv($\"{adlsPath}/factsale-csv/2012/Q4\");\n",
							"sales.Show(5);\n",
							"sales.PrintSchema();"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"source": [
							"using System;\n",
							"using System.Collections.Generic;\n",
							"\n",
							"// Set up a JDBC connection to Azure Synapse Analytics\n",
							"var jdbcUsername = \"asa.sql.staging@asaworkspace801100\";\n",
							"var jdbcPassword = \"password.1!!\";\n",
							"var jdbcConnectionString = $\"jdbc:sqlserver://asaworkspace801100.sql.azuresynapse.net:1433;database=SQLPool01;\";\n",
							"\n",
							"// Set target table name\n",
							"var tableName = $\"wwi_staging.Sale_CSharp\";\n",
							"\n",
							"// Write the retrieved sales data into a staging table in Azure Synapse Analytics.\n",
							"sales\n",
							"    .Limit(1500)\n",
							"    .Write()\n",
							"    .Format(\"jdbc\")\n",
							"    .Options(\n",
							"        new Dictionary<string, string>\n",
							"        {\n",
							"            {\"url\", jdbcConnectionString},\n",
							"            {\"dbtable\", tableName},\n",
							"            {\"user\", jdbcUsername},\n",
							"            {\"password\", jdbcPassword},\n",
							"            {\"encrypt\", \"false\"},\n",
							"            {\"trustServerCertificate\", \"true\"},\n",
							"            {\"createTableColumnTypes\", \"DeliveryDateKey VARCHAR(50), Description VARCHAR(100), Package VARCHAR(50)\"} // Override the column types for string values. They are assigned nvarchar(max) by default, and that is not compatible with columnstore index.\n",
							"        }\n",
							"    )\n",
							"    .Mode(\"append\")\n",
							"    .Save();"
						],
						"outputs": [],
						"execution_count": 3
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 5 - Model Training')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {}
				},
				"metadata": {
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/f43f70f1-af80-4cd6-8ee6-e2f20bd5a8bf/resourceGroups/Synapse-AIAD-801100/providers/Microsoft.Synapse/workspaces/asaworkspace801100/bigDataPools/SparkPool01",
						"name": "SparkPool01",
						"type": "Spark",
						"endpoint": "https://asaworkspace801100.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 60
				},
				"cells": [
					{
						"cell_type": "markdown",
						"source": [
							"# Model training and registration\n",
							"This notebook show the process for training the model, converting the model to ONNX and uploading the ONNX model to Azure Storage."
						]
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Explore the training data\n",
							"The following cells load the source CSV file into a Spark DataFrame and create a temporary view that can be used to query the data with Spark SQL.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"df = spark.read.load('abfss://dev@asadatalake387155.dfs.core.windows.net/bronze/wwi-factsale.csv', format=\"csv\"\n",
							"## If header exists uncomment line bellow\n",
							", header=True, sep=\"|\"\n",
							")"
						],
						"outputs": [],
						"execution_count": 35
					},
					{
						"cell_type": "code",
						"source": [
							"df.createOrReplaceTempView(\"facts\")"
						],
						"outputs": [],
						"execution_count": 36
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"display(spark.sql(\"SELECT * FROM facts WHERE `Customer Key` == '11' ORDER BY `Stock Item Key`\"))"
						],
						"outputs": [],
						"execution_count": 37
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Predict Quantity given Customer Key and Stock Item Key\n",
							"In the following cells we load a subset of the data that just contains the fields needed for training. \n",
							"\n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"from pyspark.sql.functions import col\n",
							"df3 = spark.sql(\"SELECT double(`Customer Key`) as customerkey, double(`Stock Item Key`) as stockitemkey, double(`Quantity`) as quantity FROM facts\").where(col(\"quantity\").isNotNull())\n",
							"df3.cache()\n",
							"print(\"Number of records:\", df3.count())\n",
							"df3.show(10)"
						],
						"outputs": [],
						"execution_count": 38
					},
					{
						"cell_type": "markdown",
						"source": [
							"Now, we split our DataFrame into training and testing DataFrames.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"trainingFraction = 0.7\n",
							"testingFraction = (1-trainingFraction)\n",
							"seed = 42\n",
							"\n",
							"# Split the dataframe into test and training dataframes\n",
							"df_train, df_test = df3.randomSplit([trainingFraction, testingFraction], seed=seed)"
						],
						"outputs": [],
						"execution_count": 39
					},
					{
						"cell_type": "markdown",
						"source": [
							"Next, we package the data into the format expected by SPark ML's LinearRegression. It requires a DataFrame with two columns- `features` and a column with the labels to predict (`quantity` in this case).\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from pyspark.ml.feature import VectorAssembler\n",
							"\n",
							"vectorAssembler = VectorAssembler(inputCols = ['customerkey', 'stockitemkey'], outputCol = 'features')"
						],
						"outputs": [],
						"execution_count": 40
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"In the following cell, we create the LinearRegression model."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.ml.regression import LinearRegression\n",
							"\n",
							"lin_reg = LinearRegression(featuresCol = 'features', labelCol='quantity', maxIter = 10, regParam=0.3)"
						],
						"outputs": [],
						"execution_count": 41
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Next, we build the training pipeline."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"from pyspark.ml import Pipeline\n",
							"\n",
							"stages = []\n",
							"stages += [vectorAssembler]\n",
							"stages += [lin_reg]\n",
							"\n",
							"partialPipeline = Pipeline().setStages(stages)"
						],
						"outputs": [],
						"execution_count": 42
					},
					{
						"cell_type": "markdown",
						"source": [
							"In the following cell, we train our LinearRegression model.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"pipelineModel = partialPipeline.fit(df_train)\n",
							"\n",
							"print(\"Coefficients: \" + str(pipelineModel.stages[-1].coefficients))\n",
							"print(\"Intercept: \" + str(pipelineModel.stages[-1].intercept))"
						],
						"outputs": [],
						"execution_count": 43
					},
					{
						"cell_type": "markdown",
						"source": [
							"With a trained model in hand, we can use it to make predictions against the test DataFrame.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"df_pred = pipelineModel.transform(df_test)\n",
							"\n",
							"from pyspark.sql.functions import rand\n",
							"display(df_pred.select([\"quantity\",  \"prediction\"]).orderBy(rand()).limit(5))"
						],
						"outputs": [],
						"execution_count": 44
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Convert model to ONNX\n",
							"In the cells that follow, we convert the model to ONNX and show how an output of how ONNX represents the Spark ML model.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"from onnxmltools import convert_sparkml\n",
							"from onnxmltools.convert.common.data_types import FloatTensorType\n",
							"\n",
							"initial_types = [ \n",
							"    (\"customerkey\", FloatTensorType([1, 1])),\n",
							"    (\"stockitemkey\", FloatTensorType([1, 1]))\n",
							"]"
						],
						"outputs": [],
						"execution_count": 53
					},
					{
						"cell_type": "code",
						"source": [
							"model_onnx = convert_sparkml(pipelineModel, 'sparkml GeneralizedLinearRegression', initial_types)\n",
							"model_onnx"
						],
						"outputs": [],
						"execution_count": 54
					},
					{
						"cell_type": "markdown",
						"source": [
							"## Upload the model to Azure Storage\n",
							"In the cells that follow we save the ONNX model to the storage of Spark driver node temporarily. Then we use the Azure Storage Python SDK to upload the ONNX model to Azure Storage.\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"with open(\"model.onnx\", \"wb\") as f:\n",
							"    f.write(model_onnx.SerializeToString())"
						],
						"outputs": [],
						"execution_count": 47
					},
					{
						"cell_type": "code",
						"source": [
							"connection_string = \"DefaultEndpointsProtocol=https;AccountName=asastore801100;AccountKey=xUgcgrs6WzL5DjS9+1n3NE4wtCV+Gcrg7SOqOh8uuzYR0hdPMSBpIaGAVKeJx9eIiXWFfG4xPLlb+AStbKjLFQ==;EndpointSuffix=core.windows.net\"\n",
							"\n",
							"from azure.storage.blob import BlobClient\n",
							"\n",
							"blob = BlobClient.from_connection_string(conn_str=connection_string, container_name=\"models\", blob_name=\"onnx/model.onnx\")\n",
							"\n",
							"with open(\"./model.onnx\", \"rb\") as data:\n",
							"    blob.upload_blob(data,overwrite=True)"
						],
						"outputs": [],
						"execution_count": 48
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Exercise 8 - AutoML with Spark')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {}
				},
				"metadata": {
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/f43f70f1-af80-4cd6-8ee6-e2f20bd5a8bf/resourceGroups/Synapse-AIAD-801100/providers/Microsoft.Synapse/workspaces/asaworkspace801100/bigDataPools/SparkPool01",
						"name": "SparkPool01",
						"type": "Spark",
						"endpoint": "https://asaworkspace801100.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 60
				},
				"cells": [
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Analyze and prepare the customer ratings dataset\n",
							"\n",
							"Use `spark.read.csv()` to load the data from the source public blob storage account and display its schema and shape."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"from pyspark.sql.types import *\n",
							"import numpy as np\n",
							"import pandas as pd\n",
							"\n",
							"manualSchema = StructType([\n",
							"  StructField(\"CustomerId\", StringType(), True),\n",
							"  StructField(\"ProductId\", StringType(), True),\n",
							"  StructField(\"Rating\", LongType(), True),\n",
							"  StructField(\"Cost\", FloatType(), True),\n",
							"  StructField(\"Size\", FloatType(), True),\n",
							"  StructField(\"Price\", FloatType(), True),\n",
							"  StructField(\"PrimaryBrandId\", LongType(), True),\n",
							"  StructField(\"GenderId\", LongType(), True),\n",
							"  StructField(\"MaritalStatus\", LongType(), True),\n",
							"  StructField(\"LowerIncomeBound\", FloatType(), True),\n",
							"  StructField(\"UpperIncomeBound\", FloatType(), True)\n",
							"])\n",
							"\n",
							"url = \"wasbs://files@synapsemlpublic.blob.core.windows.net/PersonalizedData.csv\"\n",
							"raw_data = spark.read.csv(url, header=True, schema=manualSchema)\n",
							"print(\"Schema: \")\n",
							"raw_data.printSchema()\n",
							"\n",
							"df = raw_data.toPandas()\n",
							"print(\"Shape: \", df.shape)"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Take a look at some of the items in the dataset. Notice the two-class ratings (0 vs. 1) provided by customers to products.\n",
							"\n",
							"The goal of this exercise is to build a Machine Learning classification model capable of predicting the rating based on Cost, Size, Price, PrimaryBrandId, GenderId, MaritalStatus, LowerIncomeBound, and UpperIncomeBound. To achieve the goal, you will use Azure Machine Learning (AML) automated machine learning (Auto ML)."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"collapsed": false
						},
						"source": [
							"display(df.iloc[:10, :])"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Split the data into the train and test parts using a ratio of 80% train to 20% test.\n",
							"\n"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": true
						},
						"source": [
							"split_ratio = 0.8\n",
							"seed = 42\n",
							"raw_train, raw_test = raw_data.randomSplit([split_ratio, 1 - split_ratio], seed=seed)\n",
							"print(\"Train: (rows, columns) = {}\".format((raw_train.count(), len(raw_train.columns))))\n",
							"print(\"Test: (rows, columns) = {}\".format((raw_test.count(), len(raw_test.columns))))"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Use the subscription id, resource group name, AML workspace name, and AML workspace region from your environment to connect to the AML workspace. Make sure the values are identical to the ones displayed in the Azure portal."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from azureml.core import Workspace, Experiment\n",
							"\n",
							"# Enter your workspace subscription, resource group, name, and region.\n",
							"subscription_id = \"f43f70f1-af80-4cd6-8ee6-e2f20bd5a8bf\"\n",
							"resource_group = \"Synapse-AIAD-801100\"\n",
							"workspace_name = \"asamlworkspace801100\"\n",
							"workspace_region = \"eastus\"\n",
							"\n",
							"ws = Workspace(workspace_name = workspace_name,\n",
							"               subscription_id = subscription_id,\n",
							"               resource_group = resource_group)\n",
							"\n",
							"experiment_name = \"aml-synapse-classification\"\n",
							"experiment = Experiment(ws, experiment_name)"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Persist the train and test datasets as CSV files and upload them to the AML data store.\n",
							"\n",
							"Load the train dataset as an AML tabular dataset (this format is used by the AutoML run)."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import pandas \n",
							"from azureml.core import Dataset\n",
							"\n",
							"# Get the Azure Machine Learning default datastore\n",
							"datastore = ws.get_default_datastore()\n",
							"\n",
							"train_pd = raw_train.toPandas()\n",
							"train_pd[train_pd.columns[2:]].to_csv('train.csv', index=False)\n",
							"test_pd = raw_test.toPandas()\n",
							"test_pd[test_pd.columns[2:]].to_csv('test.csv', index=False)\n",
							"\n",
							"# Convert into an Azure Machine Learning tabular dataset\n",
							"datastore.upload_files(files = ['train.csv', 'test.csv'],\n",
							"                       target_path = 'train-dataset/tabular/',\n",
							"                       overwrite = True,\n",
							"                       show_progress = True)\n",
							"ds_train = Dataset.Tabular.from_delimited_files(path = [(datastore, 'train-dataset/tabular/train.csv')])"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Use AML Auto ML to train the classification model"
						]
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Configure the AutoML run to use at most 20 iterations (combinations of ML algorithms and hyper-parameter values). This limitation will ensure the AutoML run will not exceed a total run time of 7-8 minutes.\n",
							"\n",
							"The `enable_onnx_compatible_models` ensures the run produces a model that is ONNX compatible. This will make the model available for inference directly on dedicated SQL pool tables, via the AML linked service configured in Synapse."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"import logging\n",
							"\n",
							"automl_settings = {\n",
							"    \"iterations\": 5,\n",
							"    \"iteration_timeout_minutes\": 5,\n",
							"    \"experiment_timeout_minutes\": 15,\n",
							"    \"max_concurrent_iterations\": 2,\n",
							"    \"enable_early_stopping\": True,\n",
							"    \"enable_onnx_compatible_models\": True,\n",
							"    \"primary_metric\": 'accuracy',\n",
							"    \"featurization\": 'auto',\n",
							"    \"verbosity\": logging.INFO,\n",
							"    \"n_cross_validations\": 2}"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Finalize the configuration of the AutoML run. Specify the task type (`classification`), the data to train on, and the compute resource to use. In this case, `spark_context = sc` specifies that the AutoML run will use the local Spark pool as the compute resource to run the entire process. \n",
							"The AML workspace is still coordinating the whole process, but the compute being used is local."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from azureml.train.automl import AutoMLConfig\n",
							"\n",
							"automl_config = AutoMLConfig(task='classification',\n",
							"                             debug_log='automated_ml_errors.log',\n",
							"                             training_data = ds_train,\n",
							"                             spark_context = sc,\n",
							"                             model_explainability = True, \n",
							"                             label_column_name =\"Rating\",**automl_settings)"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Submit the AutoML run and wait for its completion. The settings were chosen in a way that the total run time should not exceed 7-8 minutes. While the experiment is running, go ahead and open the Azure Machine Learning Studio in the Azure portal and check out the details of the AutoML run.\n",
							"\n",
							"Once the run completes, check the list of trained models and their performance metric (`accuracy` in our case)."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"from azureml.core.experiment import Experiment\n",
							"\n",
							"# Start an experiment in Azure Machine Learning\n",
							"tags = {\"Synapse\": \"classification\"}\n",
							"local_run = experiment.submit(automl_config, tags = tags)\n",
							"local_run.wait_for_completion(show_output=True)"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"## Register the best model in the AML workspace"
						]
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Retrieve the best model and its associated child run from the AutoML run. Retrieve all the files associated with the child run and inspect its properties."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Get best model\n",
							"best_run, fitted_model = local_run.get_output()\n",
							"best_run.download_files(output_directory='./best_run')\n",
							"best_run.properties"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Use MLFlow to define the signature of the model and inspect it.\n",
							"\n",
							"The signature will be later used to generate the MLFlow model file. This file is important because it is used by the UI for the integration of the AML experience in Synapse Studio."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import mlflow\n",
							"from mlflow.types import DataType, ColSpec, TensorSpec, Schema\n",
							"from mlflow.models import ModelSignature\n",
							"\n",
							"model_signature = ModelSignature(\n",
							"    Schema([\n",
							"        ColSpec(DataType.float, 'Cost'),\n",
							"        ColSpec(DataType.float, 'Size'),\n",
							"        ColSpec(DataType.float, 'Price'),\n",
							"        ColSpec(DataType.long, 'PrimaryBrandId'),\n",
							"        ColSpec(DataType.long, 'GenderId'),\n",
							"        ColSpec(DataType.long, 'MaritalStatus'),\n",
							"        ColSpec(DataType.float, 'LowerIncomeBound'),\n",
							"        ColSpec(DataType.float, 'UpperIncomeBound')\n",
							"    ]),\n",
							"    Schema([\n",
							"        ColSpec(DataType.long, 'label_out')\n",
							"    ])\n",
							")\n",
							"\n",
							"model_signature"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Use MLFlow to register the model into the AML model registry.\n",
							"\n",
							"Using MLFlow instead of the standard model registration feature of the AML SDK ensures that all requirements are met for an optimal experience in the UI (when using the integration of AML into Synapse Studio).\n",
							"\n",
							"Note how we are registering the ONNX version of the best model (the user experience integration of AML into Synapse Studio only supports ONNX models)."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"import onnx\n",
							"\n",
							"mlflow.set_tracking_uri(ws.get_mlflow_tracking_uri())\n",
							"mlflow.set_experiment(experiment_name)\n",
							"artifact_path = 'outputs'\n",
							"\n",
							"xmodel = onnx.load('./best_run/outputs/model.onnx')\n",
							"\n",
							"with mlflow.start_run() as run:\n",
							"    # Save the model to the outputs directory for capture\n",
							"    mlflow.onnx.log_model(xmodel, artifact_path, signature=model_signature)\n",
							"    # Register the model to AML model registry\n",
							"    mlflow.register_model(\"runs:/\" + run.info.run_id + \"/\" + artifact_path, \"aml-synapse-classifier\")"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# Persist test data to the dedicated SQL pool\n",
							"\n",
							"Create a temporary view in PySpark on top of the `raw_test` dataset. This is required to allow the `synapsesql` extension in Scala to read the data that will be persisted into a dedicated Synapse SQL pool."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"raw_test.createOrReplaceTempView(\"TestData\")"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"Persist the data to the dedicated SQL pool using `synapsesql`."
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"outputs_hidden": false,
								"source_hidden": false
							},
							"microsoft": {
								"language": "scala"
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"%%spark\n",
							"\n",
							"import com.microsoft.spark.sqlanalytics.utils.Constants\n",
							"\n",
							"val df = spark.sqlContext.sql(\"select * from TestData\")\n",
							"\n",
							"df.write.\n",
							"  synapsesql(\"SQLPool01.wwi_ml.CustomerTest\", Constants.INTERNAL)"
						],
						"outputs": []
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Setup - Export Sales to Data Lake')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {}
				},
				"metadata": {
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/f43f70f1-af80-4cd6-8ee6-e2f20bd5a8bf/resourceGroups/Synapse-AIAD-801100/providers/Microsoft.Synapse/workspaces/asaworkspace801100/bigDataPools/SparkPool01",
						"name": "SparkPool01",
						"type": "Spark",
						"endpoint": "https://asaworkspace801100.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "2.4",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28
					},
					"sessionKeepAliveTimeout": 60
				},
				"cells": [
					{
						"cell_type": "code",
						"source": [
							"%%pyspark\n",
							"wwi_sales = spark \\\n",
							"    .read \\\n",
							"    .option(\"sep\",\"|\") \\\n",
							"    .load('abfss://dev@asadatalake801100.dfs.core.windows.net/bronze/wwi-factsale.csv', format=\"csv\", header=True)\n",
							"\n",
							"wwi_sales = wwi_sales \\\n",
							"    .withColumnRenamed('Sale Key', 'SaleKey') \\\n",
							"    .withColumnRenamed('City Key', 'CityKey') \\\n",
							"    .withColumnRenamed('Customer Key', 'CustomerKey') \\\n",
							"    .withColumnRenamed('Bill To Customer Key', 'BillToCustomerKey') \\\n",
							"    .withColumnRenamed('Stock Item Key', 'StockItemKey') \\\n",
							"    .withColumnRenamed('Invoice Date Key', 'InvoiceDateKey') \\\n",
							"    .withColumnRenamed('Delivery Date Key', 'DeliveryDateKey') \\\n",
							"    .withColumnRenamed('Salesperson Key', 'SalespersonKey') \\\n",
							"    .withColumnRenamed('WWI Invoice ID', 'WWIInvoiceID') \\\n",
							"    .withColumnRenamed('Description', 'Description') \\\n",
							"    .withColumnRenamed('Package', 'Package') \\\n",
							"    .withColumnRenamed('Quantity', 'Quantity') \\\n",
							"    .withColumnRenamed('Unit Price', 'UnitPrice') \\\n",
							"    .withColumnRenamed('Tax Rate', 'TaxRate') \\\n",
							"    .withColumnRenamed('Total Excluding Tax', 'TotalExcludingTax') \\\n",
							"    .withColumnRenamed('Tax Amount', 'TaxAmount') \\\n",
							"    .withColumnRenamed('Profit', 'Profit') \\\n",
							"    .withColumnRenamed('Total Including Tax', 'TotalIncludingTax') \\\n",
							"    .withColumnRenamed('Total Dry Items', 'TotalDryItems') \\\n",
							"    .withColumnRenamed('Total Chiller Items', 'TotalChillerItems') \\\n",
							"    .withColumnRenamed('Lineage Key', 'LineageKey')"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"source": [
							"import numpy as np\n",
							"from datetime import datetime\n",
							"from dateutil.relativedelta import relativedelta"
						],
						"outputs": []
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Export WWI sales data to parquet files\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"quarters = 20\n",
							"start_date = datetime(2012, 1, 1)\n",
							"\n",
							"for quarter in np.arange(1, quarters + 1):\n",
							"\n",
							"    quarter_number = 4 if quarter % 4 == 0 else quarter % 4\n",
							"    end_date = start_date + relativedelta(months=3) + relativedelta(days=-1)\n",
							"    \n",
							"    print(f'Exporting data for {start_date.year} Q{quarter_number} ({start_date:%Y-%m-%d} : {end_date:%Y-%m-%d}) ...')\n",
							"\n",
							"    storage_path_parquet = f'abfss://wwi@asadatalake801100.dfs.core.windows.net/factsale-parquet/{start_date.year}/Q{quarter_number}'\n",
							"\n",
							"    wwi_sales \\\n",
							"        .where((wwi_sales['InvoiceDateKey'] >= f'{start_date:%Y-%m-%d}') & (wwi_sales['InvoiceDateKey'] <= f'{end_date:%Y-%m-%d}')) \\\n",
							"        .write \\\n",
							"        .partitionBy('InvoiceDateKey') \\\n",
							"        .mode(\"overwrite\") \\\n",
							"        .parquet(storage_path_parquet)\n",
							"\n",
							"    start_date = end_date + relativedelta(days=1)"
						],
						"outputs": [],
						"execution_count": 28
					},
					{
						"cell_type": "markdown",
						"source": [
							"### Export WWI sales data to CSV files\n",
							""
						]
					},
					{
						"cell_type": "code",
						"source": [
							"quarters = 20\n",
							"start_date = datetime(2012, 1, 1)\n",
							"\n",
							"for quarter in np.arange(1, quarters + 1):\n",
							"\n",
							"    quarter_number = 4 if quarter % 4 == 0 else quarter % 4\n",
							"    end_date = start_date + relativedelta(months=3) + relativedelta(days=-1)\n",
							"    \n",
							"    print(f'Exporting data for {start_date.year} Q{quarter_number} ({start_date:%Y-%m-%d} : {end_date:%Y-%m-%d}) ...')\n",
							"\n",
							"    storage_path_csv = f'abfss://wwi@asadatalake801100.dfs.core.windows.net/factsale-csv/{start_date.year}/Q{quarter_number}'\n",
							"\n",
							"    wwi_sales \\\n",
							"        .where((wwi_sales['InvoiceDateKey'] >= f'{start_date:%Y-%m-%d}') & (wwi_sales['InvoiceDateKey'] <= f'{end_date:%Y-%m-%d}')) \\\n",
							"        .write \\\n",
							"        .partitionBy('InvoiceDateKey') \\\n",
							"        .mode(\"overwrite\") \\\n",
							"        .option(\"quote\", \"\\u0000\") \\\n",
							"        .option(\"sep\",\"|\") \\\n",
							"        .csv(storage_path_csv, header=True)\n",
							"\n",
							"    start_date = end_date + relativedelta(days=1)"
						],
						"outputs": [],
						"execution_count": 31
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Task2_1 - Visualize data with notebook')]",
			"type": "Microsoft.Synapse/workspaces/notebooks",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"nbformat": 4,
				"nbformat_minor": 2,
				"bigDataPool": {
					"referenceName": "SparkPool01",
					"type": "BigDataPoolReference"
				},
				"sessionProperties": {
					"driverMemory": "28g",
					"driverCores": 4,
					"executorMemory": "28g",
					"executorCores": 4,
					"numExecutors": 2,
					"runAsWorkspaceSystemIdentity": false,
					"conf": {
						"spark.dynamicAllocation.enabled": "false",
						"spark.dynamicAllocation.minExecutors": "2",
						"spark.dynamicAllocation.maxExecutors": "2",
						"spark.autotune.trackingId": "9d371cc9-4da2-42a3-b0ec-7278e09b13a0"
					}
				},
				"metadata": {
					"saveOutput": true,
					"synapse_widget": {
						"version": "0.1",
						"state": {
							"e221aa0c-918f-48b7-91f0-4bbf839e0344": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "228266",
												"1": "77447",
												"2": "0",
												"3": "0",
												"4": "194",
												"5": "2012-01-02",
												"6": "19",
												"7": "59611",
												"8": "DBA joke mug - SELECT caffeine FROM mug (White)",
												"9": "Each",
												"10": "8",
												"11": "13.00",
												"12": "15.000",
												"13": "104.00",
												"14": "15.60",
												"15": "68.00",
												"16": "119.60",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228267",
												"1": "77447",
												"2": "0",
												"3": "0",
												"4": "198",
												"5": "2012-01-02",
												"6": "19",
												"7": "59611",
												"8": "DBA joke mug - it depends (White)",
												"9": "Each",
												"10": "8",
												"11": "13.00",
												"12": "15.000",
												"13": "104.00",
												"14": "15.60",
												"15": "68.00",
												"16": "119.60",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228268",
												"1": "75493",
												"2": "0",
												"3": "0",
												"4": "144",
												"5": "2012-01-02",
												"6": "143",
												"7": "59612",
												"8": "\"The Gu\" red shirt XML tag t-shirt (White) 3XS",
												"9": "Each",
												"10": "60",
												"11": "18.00",
												"12": "15.000",
												"13": "1080.00",
												"14": "162.00",
												"15": "660.00",
												"16": "1242.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228269",
												"1": "75493",
												"2": "0",
												"3": "0",
												"4": "19",
												"5": "2012-01-02",
												"6": "143",
												"7": "59612",
												"8": "Red and white urgent despatch tape 48mmx75m",
												"9": "Each",
												"10": "72",
												"11": "3.70",
												"12": "15.000",
												"13": "266.40",
												"14": "39.96",
												"15": "151.20",
												"16": "306.36",
												"17": "72",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228270",
												"1": "75493",
												"2": "0",
												"3": "0",
												"4": "210",
												"5": "2012-01-02",
												"6": "143",
												"7": "59612",
												"8": "USB food flash drive - chocolate bar",
												"9": "Each",
												"10": "6",
												"11": "32.00",
												"12": "15.000",
												"13": "192.00",
												"14": "28.80",
												"15": "120.00",
												"16": "220.80",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228271",
												"1": "92554",
												"2": "366",
												"3": "202",
												"4": "72",
												"5": "2012-01-02",
												"6": "19",
												"7": "59613",
												"8": "Halloween skull mask (Gray) L",
												"9": "Each",
												"10": "48",
												"11": "18.00",
												"12": "15.000",
												"13": "864.00",
												"14": "129.60",
												"15": "144.00",
												"16": "993.60",
												"17": "48",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228272",
												"1": "92554",
												"2": "366",
												"3": "202",
												"4": "80",
												"5": "2012-01-02",
												"6": "19",
												"7": "59613",
												"8": "Furry animal socks (Pink) L",
												"9": "Pair",
												"10": "84",
												"11": "5.00",
												"12": "15.000",
												"13": "420.00",
												"14": "63.00",
												"15": "294.00",
												"16": "483.00",
												"17": "84",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228273",
												"1": "49036",
												"2": "332",
												"3": "202",
												"4": "38",
												"5": "2012-01-02",
												"6": "154",
												"7": "59614",
												"8": "Shipping carton (Brown) 457x279x279mm",
												"9": "Each",
												"10": "200",
												"11": "1.28",
												"12": "15.000",
												"13": "256.00",
												"14": "38.40",
												"15": "136.00",
												"16": "294.40",
												"17": "200",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228274",
												"1": "49036",
												"2": "332",
												"3": "202",
												"4": "132",
												"5": "2012-01-02",
												"6": "154",
												"7": "59614",
												"8": "\"The Gu\" red shirt XML tag t-shirt (White) 7XL",
												"9": "Each",
												"10": "12",
												"11": "18.00",
												"12": "15.000",
												"13": "216.00",
												"14": "32.40",
												"15": "114.00",
												"16": "248.40",
												"17": "12",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228275",
												"1": "49036",
												"2": "332",
												"3": "202",
												"4": "171",
												"5": "2012-01-02",
												"6": "154",
												"7": "59614",
												"8": "Developer joke mug - this code was generated by a tool (Black)",
												"9": "Each",
												"10": "3",
												"11": "13.00",
												"12": "15.000",
												"13": "39.00",
												"14": "5.85",
												"15": "25.50",
												"16": "44.85",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228276",
												"1": "77605",
												"2": "0",
												"3": "0",
												"4": "188",
												"5": "2012-01-02",
												"6": "155",
												"7": "59615",
												"8": "Developer joke mug - that's a hardware problem (White)",
												"9": "Each",
												"10": "1",
												"11": "13.00",
												"12": "15.000",
												"13": "13.00",
												"14": "1.95",
												"15": "8.50",
												"16": "14.95",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228277",
												"1": "77605",
												"2": "0",
												"3": "0",
												"4": "214",
												"5": "2012-01-02",
												"6": "155",
												"7": "59615",
												"8": "USB food flash drive - hot dog",
												"9": "Each",
												"10": "1",
												"11": "32.00",
												"12": "15.000",
												"13": "32.00",
												"14": "4.80",
												"15": "20.00",
												"16": "36.80",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228278",
												"1": "77605",
												"2": "0",
												"3": "0",
												"4": "124",
												"5": "2012-01-02",
												"6": "155",
												"7": "59615",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) XXL",
												"9": "Each",
												"10": "60",
												"11": "18.00",
												"12": "15.000",
												"13": "1080.00",
												"14": "162.00",
												"15": "630.00",
												"16": "1242.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228279",
												"1": "77605",
												"2": "0",
												"3": "0",
												"4": "212",
												"5": "2012-01-02",
												"6": "155",
												"7": "59615",
												"8": "USB food flash drive - dim sum 10 drive variety pack",
												"9": "Packet",
												"10": "9",
												"11": "240.00",
												"12": "15.000",
												"13": "2160.00",
												"14": "324.00",
												"15": "1363.50",
												"16": "2484.00",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228280",
												"1": "77605",
												"2": "0",
												"3": "0",
												"4": "219",
												"5": "2012-01-02",
												"6": "155",
												"7": "59615",
												"8": "USB missile launcher (Green)",
												"9": "Each",
												"10": "3",
												"11": "25.00",
												"12": "15.000",
												"13": "75.00",
												"14": "11.25",
												"15": "46.50",
												"16": "86.25",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228281",
												"1": "66094",
												"2": "136",
												"3": "1",
												"4": "62",
												"5": "2012-01-02",
												"6": "143",
												"7": "59616",
												"8": "10 mm Double sided bubble wrap 50m",
												"9": "Each",
												"10": "30",
												"11": "105.00",
												"12": "15.000",
												"13": "3150.00",
												"14": "472.50",
												"15": "1470.00",
												"16": "3622.50",
												"17": "30",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228282",
												"1": "66094",
												"2": "136",
												"3": "1",
												"4": "108",
												"5": "2012-01-02",
												"6": "143",
												"7": "59616",
												"8": "Superhero action jacket (Blue) L",
												"9": "Each",
												"10": "1",
												"11": "30.00",
												"12": "15.000",
												"13": "30.00",
												"14": "4.50",
												"15": "8.00",
												"16": "34.50",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228283",
												"1": "66094",
												"2": "136",
												"3": "1",
												"4": "151",
												"5": "2012-01-02",
												"6": "143",
												"7": "59616",
												"8": "Ride on toy sedan car (Blue) 1/12 scale",
												"9": "Each",
												"10": "2",
												"11": "230.00",
												"12": "15.000",
												"13": "460.00",
												"14": "69.00",
												"15": "170.00",
												"16": "529.00",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228284",
												"1": "72761",
												"2": "0",
												"3": "0",
												"4": "62",
												"5": "2012-01-02",
												"6": "150",
												"7": "59617",
												"8": "10 mm Double sided bubble wrap 50m",
												"9": "Each",
												"10": "100",
												"11": "105.00",
												"12": "15.000",
												"13": "10500.00",
												"14": "1575.00",
												"15": "4900.00",
												"16": "12075.00",
												"17": "100",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228285",
												"1": "72761",
												"2": "0",
												"3": "0",
												"4": "208",
												"5": "2012-01-02",
												"6": "150",
												"7": "59617",
												"8": "USB food flash drive - donut",
												"9": "Each",
												"10": "2",
												"11": "32.00",
												"12": "15.000",
												"13": "64.00",
												"14": "9.60",
												"15": "40.00",
												"16": "73.60",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228286",
												"1": "101670",
												"2": "0",
												"3": "0",
												"4": "219",
												"5": "2012-01-02",
												"6": "154",
												"7": "59618",
												"8": "USB missile launcher (Green)",
												"9": "Each",
												"10": "1",
												"11": "25.00",
												"12": "15.000",
												"13": "25.00",
												"14": "3.75",
												"15": "15.50",
												"16": "28.75",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228287",
												"1": "53088",
												"2": "110",
												"3": "1",
												"4": "164",
												"5": "2012-01-02",
												"6": "143",
												"7": "59619",
												"8": "IT joke mug - hardware: part of the computer that can be kicked (White)",
												"9": "Each",
												"10": "6",
												"11": "13.00",
												"12": "15.000",
												"13": "78.00",
												"14": "11.70",
												"15": "51.00",
												"16": "89.70",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228288",
												"1": "53088",
												"2": "110",
												"3": "1",
												"4": "62",
												"5": "2012-01-02",
												"6": "143",
												"7": "59619",
												"8": "10 mm Double sided bubble wrap 50m",
												"9": "Each",
												"10": "90",
												"11": "105.00",
												"12": "15.000",
												"13": "9450.00",
												"14": "1417.50",
												"15": "4410.00",
												"16": "10867.50",
												"17": "90",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228289",
												"1": "53088",
												"2": "110",
												"3": "1",
												"4": "106",
												"5": "2012-01-02",
												"6": "143",
												"7": "59619",
												"8": "Superhero action jacket (Blue) XXL",
												"9": "Each",
												"10": "6",
												"11": "30.00",
												"12": "15.000",
												"13": "180.00",
												"14": "27.00",
												"15": "48.00",
												"16": "207.00",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228290",
												"1": "53088",
												"2": "110",
												"3": "1",
												"4": "108",
												"5": "2012-01-02",
												"6": "143",
												"7": "59619",
												"8": "Superhero action jacket (Blue) L",
												"9": "Each",
												"10": "2",
												"11": "30.00",
												"12": "15.000",
												"13": "60.00",
												"14": "9.00",
												"15": "16.00",
												"16": "69.00",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228291",
												"1": "90443",
												"2": "0",
												"3": "0",
												"4": "184",
												"5": "2012-01-02",
												"6": "152",
												"7": "59620",
												"8": "Developer joke mug - when your hammer is C++ (White)",
												"9": "Each",
												"10": "9",
												"11": "13.00",
												"12": "15.000",
												"13": "117.00",
												"14": "17.55",
												"15": "76.50",
												"16": "134.55",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228292",
												"1": "90443",
												"2": "0",
												"3": "0",
												"4": "186",
												"5": "2012-01-02",
												"6": "152",
												"7": "59620",
												"8": "Developer joke mug - fun was unexpected at this time (White)",
												"9": "Each",
												"10": "1",
												"11": "13.00",
												"12": "15.000",
												"13": "13.00",
												"14": "1.95",
												"15": "8.50",
												"16": "14.95",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228293",
												"1": "93314",
												"2": "0",
												"3": "0",
												"4": "42",
												"5": "2012-01-02",
												"6": "156",
												"7": "59621",
												"8": "Shipping carton (Brown) 500x310x310mm",
												"9": "Each",
												"10": "225",
												"11": "2.55",
												"12": "15.000",
												"13": "573.75",
												"14": "86.06",
												"15": "326.25",
												"16": "659.81",
												"17": "225",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228294",
												"1": "93314",
												"2": "0",
												"3": "0",
												"4": "194",
												"5": "2012-01-02",
												"6": "156",
												"7": "59621",
												"8": "DBA joke mug - SELECT caffeine FROM mug (White)",
												"9": "Each",
												"10": "9",
												"11": "13.00",
												"12": "15.000",
												"13": "117.00",
												"14": "17.55",
												"15": "76.50",
												"16": "134.55",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228295",
												"1": "93314",
												"2": "0",
												"3": "0",
												"4": "108",
												"5": "2012-01-02",
												"6": "156",
												"7": "59621",
												"8": "Superhero action jacket (Blue) L",
												"9": "Each",
												"10": "2",
												"11": "30.00",
												"12": "15.000",
												"13": "60.00",
												"14": "9.00",
												"15": "16.00",
												"16": "69.00",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228296",
												"1": "93314",
												"2": "0",
												"3": "0",
												"4": "26",
												"5": "2012-01-02",
												"6": "156",
												"7": "59621",
												"8": "Black and orange glass with care despatch tape  48mmx100m",
												"9": "Each",
												"10": "72",
												"11": "4.10",
												"12": "15.000",
												"13": "295.20",
												"14": "44.28",
												"15": "151.20",
												"16": "339.48",
												"17": "72",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228297",
												"1": "109936",
												"2": "319",
												"3": "202",
												"4": "64",
												"5": "2012-01-02",
												"6": "143",
												"7": "59622",
												"8": "10 mm Double sided bubble wrap 10m",
												"9": "Each",
												"10": "40",
												"11": "15.00",
												"12": "15.000",
												"13": "600.00",
												"14": "90.00",
												"15": "300.00",
												"16": "690.00",
												"17": "40",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228298",
												"1": "109936",
												"2": "319",
												"3": "202",
												"4": "179",
												"5": "2012-01-02",
												"6": "143",
												"7": "59622",
												"8": "Developer joke mug - (hip, hip, array) (Black)",
												"9": "Each",
												"10": "3",
												"11": "13.00",
												"12": "15.000",
												"13": "39.00",
												"14": "5.85",
												"15": "25.50",
												"16": "44.85",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228299",
												"1": "109936",
												"2": "319",
												"3": "202",
												"4": "45",
												"5": "2012-01-02",
												"6": "143",
												"7": "59622",
												"8": "Bubblewrap dispenser (Blue) 1.5m",
												"9": "Each",
												"10": "6",
												"11": "240.00",
												"12": "15.000",
												"13": "1440.00",
												"14": "216.00",
												"15": "780.00",
												"16": "1656.00",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228300",
												"1": "109936",
												"2": "319",
												"3": "202",
												"4": "57",
												"5": "2012-01-02",
												"6": "143",
												"7": "59622",
												"8": "32 mm Double sided bubble wrap 20m",
												"9": "Each",
												"10": "20",
												"11": "37.00",
												"12": "15.000",
												"13": "740.00",
												"14": "111.00",
												"15": "460.00",
												"16": "851.00",
												"17": "20",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228301",
												"1": "106065",
												"2": "27",
												"3": "1",
												"4": "171",
												"5": "2012-01-02",
												"6": "151",
												"7": "59623",
												"8": "Developer joke mug - this code was generated by a tool (Black)",
												"9": "Each",
												"10": "10",
												"11": "13.00",
												"12": "15.000",
												"13": "130.00",
												"14": "19.50",
												"15": "85.00",
												"16": "149.50",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228302",
												"1": "106065",
												"2": "27",
												"3": "1",
												"4": "165",
												"5": "2012-01-02",
												"6": "151",
												"7": "59623",
												"8": "IT joke mug - that behavior is by design (Black)",
												"9": "Each",
												"10": "9",
												"11": "13.00",
												"12": "15.000",
												"13": "117.00",
												"14": "17.55",
												"15": "76.50",
												"16": "134.55",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228303",
												"1": "106065",
												"2": "27",
												"3": "1",
												"4": "1",
												"5": "2012-01-02",
												"6": "151",
												"7": "59623",
												"8": "Void fill 400 L bag (White) 400L",
												"9": "Each",
												"10": "60",
												"11": "50.00",
												"12": "15.000",
												"13": "3000.00",
												"14": "450.00",
												"15": "1440.00",
												"16": "3450.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228304",
												"1": "106065",
												"2": "27",
												"3": "1",
												"4": "117",
												"5": "2012-01-02",
												"6": "151",
												"7": "59623",
												"8": "Alien officer hoodie (Black) XXL",
												"9": "Each",
												"10": "5",
												"11": "35.00",
												"12": "15.000",
												"13": "175.00",
												"14": "26.25",
												"15": "90.00",
												"16": "201.25",
												"17": "5",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228305",
												"1": "106065",
												"2": "27",
												"3": "1",
												"4": "8",
												"5": "2012-01-02",
												"6": "151",
												"7": "59623",
												"8": "Large  replacement blades 18mm",
												"9": "Each",
												"10": "50",
												"11": "4.30",
												"12": "15.000",
												"13": "215.00",
												"14": "32.25",
												"15": "112.50",
												"16": "247.25",
												"17": "50",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228306",
												"1": "108045",
												"2": "155",
												"3": "1",
												"4": "188",
												"5": "2012-01-02",
												"6": "143",
												"7": "59624",
												"8": "Developer joke mug - that's a hardware problem (White)",
												"9": "Each",
												"10": "9",
												"11": "13.00",
												"12": "15.000",
												"13": "117.00",
												"14": "17.55",
												"15": "76.50",
												"16": "134.55",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228307",
												"1": "108045",
												"2": "155",
												"3": "1",
												"4": "185",
												"5": "2012-01-02",
												"6": "143",
												"7": "59624",
												"8": "Developer joke mug - fun was unexpected at this time (Black)",
												"9": "Each",
												"10": "7",
												"11": "13.00",
												"12": "15.000",
												"13": "91.00",
												"14": "13.65",
												"15": "59.50",
												"16": "104.65",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228308",
												"1": "108045",
												"2": "155",
												"3": "1",
												"4": "209",
												"5": "2012-01-02",
												"6": "143",
												"7": "59624",
												"8": "USB food flash drive - cookie",
												"9": "Each",
												"10": "1",
												"11": "32.00",
												"12": "15.000",
												"13": "32.00",
												"14": "4.80",
												"15": "20.00",
												"16": "36.80",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228309",
												"1": "98014",
												"2": "204",
												"3": "202",
												"4": "20",
												"5": "2012-01-02",
												"6": "129",
												"7": "59625",
												"8": "Black and yellow heavy despatch tape 48mmx100m",
												"9": "Each",
												"10": "96",
												"11": "4.10",
												"12": "15.000",
												"13": "393.60",
												"14": "59.04",
												"15": "163.20",
												"16": "452.64",
												"17": "96",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228310",
												"1": "98014",
												"2": "204",
												"3": "202",
												"4": "186",
												"5": "2012-01-02",
												"6": "129",
												"7": "59625",
												"8": "Developer joke mug - fun was unexpected at this time (White)",
												"9": "Each",
												"10": "6",
												"11": "13.00",
												"12": "15.000",
												"13": "78.00",
												"14": "11.70",
												"15": "51.00",
												"16": "89.70",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228311",
												"1": "53016",
												"2": "280",
												"3": "202",
												"4": "154",
												"5": "2012-01-02",
												"6": "19",
												"7": "59626",
												"8": "RC big wheel monster truck with remote control (Black) 1/50 scale",
												"9": "Each",
												"10": "10",
												"11": "45.00",
												"12": "15.000",
												"13": "450.00",
												"14": "67.50",
												"15": "295.00",
												"16": "517.50",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228312",
												"1": "53016",
												"2": "280",
												"3": "202",
												"4": "93",
												"5": "2012-01-02",
												"6": "19",
												"7": "59626",
												"8": "Plush shark slippers (Gray) M",
												"9": "Each",
												"10": "5",
												"11": "32.00",
												"12": "15.000",
												"13": "160.00",
												"14": "24.00",
												"15": "120.00",
												"16": "184.00",
												"17": "5",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228313",
												"1": "113126",
												"2": "122",
												"3": "1",
												"4": "192",
												"5": "2012-01-02",
												"6": "156",
												"7": "59627",
												"8": "DBA joke mug - two types of DBAs (White)",
												"9": "Each",
												"10": "5",
												"11": "13.00",
												"12": "15.000",
												"13": "65.00",
												"14": "9.75",
												"15": "42.50",
												"16": "74.75",
												"17": "5",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228314",
												"1": "113126",
												"2": "122",
												"3": "1",
												"4": "126",
												"5": "2012-01-02",
												"6": "156",
												"7": "59627",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) L",
												"9": "Each",
												"10": "72",
												"11": "18.00",
												"12": "15.000",
												"13": "1296.00",
												"14": "194.40",
												"15": "792.00",
												"16": "1490.40",
												"17": "72",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228315",
												"1": "93367",
												"2": "0",
												"3": "0",
												"4": "59",
												"5": "2012-01-02",
												"6": "155",
												"7": "59628",
												"8": "20 mm Double sided bubble wrap 50m",
												"9": "Each",
												"10": "20",
												"11": "108.00",
												"12": "15.000",
												"13": "2160.00",
												"14": "324.00",
												"15": "1840.00",
												"16": "2484.00",
												"17": "20",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228316",
												"1": "93367",
												"2": "0",
												"3": "0",
												"4": "161",
												"5": "2012-01-02",
												"6": "155",
												"7": "59628",
												"8": "RC toy sedan car with remote control (Red) 1/50 scale",
												"9": "Each",
												"10": "9",
												"11": "25.00",
												"12": "15.000",
												"13": "225.00",
												"14": "33.75",
												"15": "112.50",
												"16": "258.75",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228317",
												"1": "93367",
												"2": "0",
												"3": "0",
												"4": "123",
												"5": "2012-01-02",
												"6": "155",
												"7": "59628",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) 3XL",
												"9": "Each",
												"10": "72",
												"11": "18.00",
												"12": "15.000",
												"13": "1296.00",
												"14": "194.40",
												"15": "720.00",
												"16": "1490.40",
												"17": "72",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228318",
												"1": "93367",
												"2": "0",
												"3": "0",
												"4": "210",
												"5": "2012-01-02",
												"6": "155",
												"7": "59628",
												"8": "USB food flash drive - chocolate bar",
												"9": "Each",
												"10": "3",
												"11": "32.00",
												"12": "15.000",
												"13": "96.00",
												"14": "14.40",
												"15": "60.00",
												"16": "110.40",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228319",
												"1": "87288",
												"2": "75",
												"3": "1",
												"4": "47",
												"5": "2012-01-02",
												"6": "156",
												"7": "59629",
												"8": "32 mm Anti static bubble wrap (Blue) 50m",
												"9": "Each",
												"10": "100",
												"11": "105.00",
												"12": "15.000",
												"13": "10500.00",
												"14": "1575.00",
												"15": "5800.00",
												"16": "12075.00",
												"17": "100",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228320",
												"1": "87288",
												"2": "75",
												"3": "1",
												"4": "81",
												"5": "2012-01-02",
												"6": "156",
												"7": "59629",
												"8": "Furry animal socks (Pink) M",
												"9": "Pair",
												"10": "108",
												"11": "5.00",
												"12": "15.000",
												"13": "540.00",
												"14": "81.00",
												"15": "378.00",
												"16": "621.00",
												"17": "108",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228321",
												"1": "87288",
												"2": "75",
												"3": "1",
												"4": "60",
												"5": "2012-01-02",
												"6": "156",
												"7": "59629",
												"8": "20 mm Double sided bubble wrap 20m",
												"9": "Each",
												"10": "20",
												"11": "33.00",
												"12": "15.000",
												"13": "660.00",
												"14": "99.00",
												"15": "360.00",
												"16": "759.00",
												"17": "20",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228322",
												"1": "87288",
												"2": "75",
												"3": "1",
												"4": "140",
												"5": "2012-01-02",
												"6": "156",
												"7": "59629",
												"8": "\"The Gu\" red shirt XML tag t-shirt (White) M",
												"9": "Each",
												"10": "12",
												"11": "18.00",
												"12": "15.000",
												"13": "216.00",
												"14": "32.40",
												"15": "132.00",
												"16": "248.40",
												"17": "12",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228323",
												"1": "114000",
												"2": "199",
												"3": "1",
												"4": "214",
												"5": "2012-01-02",
												"6": "154",
												"7": "59630",
												"8": "USB food flash drive - hot dog",
												"9": "Each",
												"10": "2",
												"11": "32.00",
												"12": "15.000",
												"13": "64.00",
												"14": "9.60",
												"15": "40.00",
												"16": "73.60",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228324",
												"1": "114000",
												"2": "199",
												"3": "1",
												"4": "34",
												"5": "2012-01-02",
												"6": "154",
												"7": "59630",
												"8": "Shipping carton (Brown) 457x457x457mm",
												"9": "Each",
												"10": "100",
												"11": "2.10",
												"12": "15.000",
												"13": "210.00",
												"14": "31.50",
												"15": "100.00",
												"16": "241.50",
												"17": "100",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228325",
												"1": "114000",
												"2": "199",
												"3": "1",
												"4": "115",
												"5": "2012-01-02",
												"6": "154",
												"7": "59630",
												"8": "Alien officer hoodie (Black) 4XL",
												"9": "Each",
												"10": "3",
												"11": "35.00",
												"12": "15.000",
												"13": "105.00",
												"14": "15.75",
												"15": "54.00",
												"16": "120.75",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228326",
												"1": "114000",
												"2": "199",
												"3": "1",
												"4": "166",
												"5": "2012-01-02",
												"6": "154",
												"7": "59630",
												"8": "IT joke mug - that behavior is by design (White)",
												"9": "Each",
												"10": "1",
												"11": "13.00",
												"12": "15.000",
												"13": "13.00",
												"14": "1.95",
												"15": "8.50",
												"16": "14.95",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228327",
												"1": "114000",
												"2": "199",
												"3": "1",
												"4": "171",
												"5": "2012-01-02",
												"6": "154",
												"7": "59630",
												"8": "Developer joke mug - this code was generated by a tool (Black)",
												"9": "Each",
												"10": "10",
												"11": "13.00",
												"12": "15.000",
												"13": "130.00",
												"14": "19.50",
												"15": "85.00",
												"16": "149.50",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228328",
												"1": "111746",
												"2": "345",
												"3": "202",
												"4": "114",
												"5": "2012-01-02",
												"6": "150",
												"7": "59631",
												"8": "Alien officer hoodie (Black) 5XL",
												"9": "Each",
												"10": "1",
												"11": "35.00",
												"12": "15.000",
												"13": "35.00",
												"14": "5.25",
												"15": "18.00",
												"16": "40.25",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228329",
												"1": "111746",
												"2": "345",
												"3": "202",
												"4": "123",
												"5": "2012-01-02",
												"6": "150",
												"7": "59631",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) 3XL",
												"9": "Each",
												"10": "60",
												"11": "18.00",
												"12": "15.000",
												"13": "1080.00",
												"14": "162.00",
												"15": "600.00",
												"16": "1242.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228330",
												"1": "111746",
												"2": "345",
												"3": "202",
												"4": "158",
												"5": "2012-01-02",
												"6": "150",
												"7": "59631",
												"8": "RC toy sedan car with remote control (Yellow) 1/50 scale",
												"9": "Each",
												"10": "1",
												"11": "25.00",
												"12": "15.000",
												"13": "25.00",
												"14": "3.75",
												"15": "12.50",
												"16": "28.75",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228331",
												"1": "81738",
												"2": "84",
												"3": "1",
												"4": "211",
												"5": "2012-01-02",
												"6": "129",
												"7": "59632",
												"8": "USB food flash drive - banana",
												"9": "Each",
												"10": "10",
												"11": "32.00",
												"12": "15.000",
												"13": "320.00",
												"14": "48.00",
												"15": "200.00",
												"16": "368.00",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228332",
												"1": "81738",
												"2": "84",
												"3": "1",
												"4": "104",
												"5": "2012-01-02",
												"6": "129",
												"7": "59632",
												"8": "Superhero action jacket (Blue) 4XL",
												"9": "Each",
												"10": "8",
												"11": "34.00",
												"12": "15.000",
												"13": "272.00",
												"14": "40.80",
												"15": "80.00",
												"16": "312.80",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228333",
												"1": "92226",
												"2": "0",
												"3": "0",
												"4": "62",
												"5": "2012-01-02",
												"6": "158",
												"7": "59633",
												"8": "10 mm Double sided bubble wrap 50m",
												"9": "Each",
												"10": "60",
												"11": "105.00",
												"12": "15.000",
												"13": "6300.00",
												"14": "945.00",
												"15": "2940.00",
												"16": "7245.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228334",
												"1": "92226",
												"2": "0",
												"3": "0",
												"4": "146",
												"5": "2012-01-02",
												"6": "158",
												"7": "59633",
												"8": "Ride on vintage American toy coupe (Black) 1/12 scale",
												"9": "Each",
												"10": "9",
												"11": "285.00",
												"12": "15.000",
												"13": "2565.00",
												"14": "384.75",
												"15": "1170.00",
												"16": "2949.75",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228335",
												"1": "92226",
												"2": "0",
												"3": "0",
												"4": "186",
												"5": "2012-01-02",
												"6": "158",
												"7": "59633",
												"8": "Developer joke mug - fun was unexpected at this time (White)",
												"9": "Each",
												"10": "10",
												"11": "13.00",
												"12": "15.000",
												"13": "130.00",
												"14": "19.50",
												"15": "85.00",
												"16": "149.50",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228336",
												"1": "109827",
												"2": "172",
												"3": "1",
												"4": "86",
												"5": "2012-01-02",
												"6": "19",
												"7": "59634",
												"8": "Animal with big feet slippers (Brown) S",
												"9": "Each",
												"10": "8",
												"11": "32.00",
												"12": "15.000",
												"13": "256.00",
												"14": "38.40",
												"15": "192.00",
												"16": "294.40",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228337",
												"1": "109827",
												"2": "172",
												"3": "1",
												"4": "111",
												"5": "2012-01-02",
												"6": "19",
												"7": "59634",
												"8": "Superhero action jacket (Blue) XS",
												"9": "Each",
												"10": "4",
												"11": "25.00",
												"12": "15.000",
												"13": "100.00",
												"14": "15.00",
												"15": "24.00",
												"16": "115.00",
												"17": "4",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228338",
												"1": "108743",
												"2": "48",
												"3": "1",
												"4": "213",
												"5": "2012-01-02",
												"6": "151",
												"7": "59635",
												"8": "USB food flash drive - pizza slice",
												"9": "Each",
												"10": "6",
												"11": "32.00",
												"12": "15.000",
												"13": "192.00",
												"14": "28.80",
												"15": "120.00",
												"16": "220.80",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228339",
												"1": "108743",
												"2": "48",
												"3": "1",
												"4": "121",
												"5": "2012-01-02",
												"6": "151",
												"7": "59635",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) 5XL",
												"9": "Each",
												"10": "96",
												"11": "18.00",
												"12": "15.000",
												"13": "1728.00",
												"14": "259.20",
												"15": "960.00",
												"16": "1987.20",
												"17": "96",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228340",
												"1": "108743",
												"2": "48",
												"3": "1",
												"4": "102",
												"5": "2012-01-02",
												"6": "151",
												"7": "59635",
												"8": "Dinosaur battery-powered slippers (Green) S",
												"9": "Each",
												"10": "1",
												"11": "32.00",
												"12": "15.000",
												"13": "32.00",
												"14": "4.80",
												"15": "24.00",
												"16": "36.80",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228341",
												"1": "108743",
												"2": "48",
												"3": "1",
												"4": "31",
												"5": "2012-01-02",
												"6": "151",
												"7": "59635",
												"8": "Clear packaging tape 48mmx75m",
												"9": "Each",
												"10": "260",
												"11": "2.90",
												"12": "15.000",
												"13": "754.00",
												"14": "113.10",
												"15": "312.00",
												"16": "867.10",
												"17": "260",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228342",
												"1": "108743",
												"2": "48",
												"3": "1",
												"4": "177",
												"5": "2012-01-02",
												"6": "151",
												"7": "59635",
												"8": "Developer joke mug - understanding recursion requires understanding recursion (Black)",
												"9": "Each",
												"10": "2",
												"11": "13.00",
												"12": "15.000",
												"13": "26.00",
												"14": "3.90",
												"15": "17.00",
												"16": "29.90",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228343",
												"1": "86228",
												"2": "86",
												"3": "1",
												"4": "3",
												"5": "2012-01-02",
												"6": "129",
												"7": "59636",
												"8": "Void fill 200 L bag (White) 200L",
												"9": "Each",
												"10": "60",
												"11": "25.00",
												"12": "15.000",
												"13": "1500.00",
												"14": "225.00",
												"15": "540.00",
												"16": "1725.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228344",
												"1": "86228",
												"2": "86",
												"3": "1",
												"4": "128",
												"5": "2012-01-02",
												"6": "129",
												"7": "59636",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) S",
												"9": "Each",
												"10": "12",
												"11": "18.00",
												"12": "15.000",
												"13": "216.00",
												"14": "32.40",
												"15": "132.00",
												"16": "248.40",
												"17": "12",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228345",
												"1": "86228",
												"2": "86",
												"3": "1",
												"4": "84",
												"5": "2012-01-02",
												"6": "129",
												"7": "59636",
												"8": "Animal with big feet slippers (Brown) L",
												"9": "Each",
												"10": "4",
												"11": "32.00",
												"12": "15.000",
												"13": "128.00",
												"14": "19.20",
												"15": "96.00",
												"16": "147.20",
												"17": "4",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228346",
												"1": "86228",
												"2": "86",
												"3": "1",
												"4": "102",
												"5": "2012-01-02",
												"6": "129",
												"7": "59636",
												"8": "Dinosaur battery-powered slippers (Green) S",
												"9": "Each",
												"10": "7",
												"11": "32.00",
												"12": "15.000",
												"13": "224.00",
												"14": "33.60",
												"15": "168.00",
												"16": "257.60",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228347",
												"1": "86228",
												"2": "86",
												"3": "1",
												"4": "5",
												"5": "2012-01-02",
												"6": "129",
												"7": "59636",
												"8": "Air cushion machine (Blue)",
												"9": "Each",
												"10": "6",
												"11": "1899.00",
												"12": "15.000",
												"13": "11394.00",
												"14": "1709.10",
												"15": "4554.00",
												"16": "13103.10",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228348",
												"1": "51006",
												"2": "119",
												"3": "1",
												"4": "117",
												"5": "2012-01-02",
												"6": "152",
												"7": "59637",
												"8": "Alien officer hoodie (Black) XXL",
												"9": "Each",
												"10": "5",
												"11": "35.00",
												"12": "15.000",
												"13": "175.00",
												"14": "26.25",
												"15": "90.00",
												"16": "201.25",
												"17": "5",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228349",
												"1": "51006",
												"2": "119",
												"3": "1",
												"4": "196",
												"5": "2012-01-02",
												"6": "152",
												"7": "59637",
												"8": "DBA joke mug - I will get you in order (White)",
												"9": "Each",
												"10": "1",
												"11": "13.00",
												"12": "15.000",
												"13": "13.00",
												"14": "1.95",
												"15": "8.50",
												"16": "14.95",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228350",
												"1": "51006",
												"2": "119",
												"3": "1",
												"4": "7",
												"5": "2012-01-02",
												"6": "152",
												"7": "59637",
												"8": "Air cushion film 200mmx100mm 325m",
												"9": "Each",
												"10": "6",
												"11": "87.00",
												"12": "15.000",
												"13": "522.00",
												"14": "78.30",
												"15": "312.00",
												"16": "600.30",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228351",
												"1": "51006",
												"2": "119",
												"3": "1",
												"4": "6",
												"5": "2012-01-02",
												"6": "152",
												"7": "59637",
												"8": "Air cushion film 200mmx200mm 325m",
												"9": "Each",
												"10": "10",
												"11": "90.00",
												"12": "15.000",
												"13": "900.00",
												"14": "135.00",
												"15": "360.00",
												"16": "1035.00",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228352",
												"1": "51006",
												"2": "119",
												"3": "1",
												"4": "206",
												"5": "2012-01-02",
												"6": "152",
												"7": "59637",
												"8": "USB food flash drive - fortune cookie",
												"9": "Each",
												"10": "8",
												"11": "32.00",
												"12": "15.000",
												"13": "256.00",
												"14": "38.40",
												"15": "160.00",
												"16": "294.40",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228353",
												"1": "85782",
												"2": "0",
												"3": "0",
												"4": "174",
												"5": "2012-01-02",
												"6": "129",
												"7": "59638",
												"8": "Developer joke mug - a foo walks into a bar (White)",
												"9": "Each",
												"10": "1",
												"11": "13.00",
												"12": "15.000",
												"13": "13.00",
												"14": "1.95",
												"15": "8.50",
												"16": "14.95",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228354",
												"1": "85782",
												"2": "0",
												"3": "0",
												"4": "107",
												"5": "2012-01-02",
												"6": "129",
												"7": "59638",
												"8": "Superhero action jacket (Blue) XL",
												"9": "Each",
												"10": "10",
												"11": "30.00",
												"12": "15.000",
												"13": "300.00",
												"14": "45.00",
												"15": "80.00",
												"16": "345.00",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228355",
												"1": "85782",
												"2": "0",
												"3": "0",
												"4": "211",
												"5": "2012-01-02",
												"6": "129",
												"7": "59638",
												"8": "USB food flash drive - banana",
												"9": "Each",
												"10": "2",
												"11": "32.00",
												"12": "15.000",
												"13": "64.00",
												"14": "9.60",
												"15": "40.00",
												"16": "73.60",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228356",
												"1": "85782",
												"2": "0",
												"3": "0",
												"4": "20",
												"5": "2012-01-02",
												"6": "129",
												"7": "59638",
												"8": "Black and yellow heavy despatch tape 48mmx100m",
												"9": "Each",
												"10": "192",
												"11": "4.10",
												"12": "15.000",
												"13": "787.20",
												"14": "118.08",
												"15": "326.40",
												"16": "905.28",
												"17": "192",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228357",
												"1": "85782",
												"2": "0",
												"3": "0",
												"4": "79",
												"5": "2012-01-02",
												"6": "129",
												"7": "59638",
												"8": "Furry animal socks (Pink) XL",
												"9": "Pair",
												"10": "48",
												"11": "5.00",
												"12": "15.000",
												"13": "240.00",
												"14": "36.00",
												"15": "168.00",
												"16": "276.00",
												"17": "48",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228358",
												"1": "82394",
												"2": "0",
												"3": "0",
												"4": "164",
												"5": "2012-01-02",
												"6": "150",
												"7": "59639",
												"8": "IT joke mug - hardware: part of the computer that can be kicked (White)",
												"9": "Each",
												"10": "9",
												"11": "13.00",
												"12": "15.000",
												"13": "117.00",
												"14": "17.55",
												"15": "76.50",
												"16": "134.55",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228359",
												"1": "82394",
												"2": "0",
												"3": "0",
												"4": "105",
												"5": "2012-01-02",
												"6": "150",
												"7": "59639",
												"8": "Superhero action jacket (Blue) 3XL",
												"9": "Each",
												"10": "3",
												"11": "34.00",
												"12": "15.000",
												"13": "102.00",
												"14": "15.30",
												"15": "30.00",
												"16": "117.30",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228360",
												"1": "82394",
												"2": "0",
												"3": "0",
												"4": "179",
												"5": "2012-01-02",
												"6": "150",
												"7": "59639",
												"8": "Developer joke mug - (hip, hip, array) (Black)",
												"9": "Each",
												"10": "7",
												"11": "13.00",
												"12": "15.000",
												"13": "91.00",
												"14": "13.65",
												"15": "59.50",
												"16": "104.65",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228361",
												"1": "109124",
												"2": "69",
												"3": "1",
												"4": "208",
												"5": "2012-01-02",
												"6": "129",
												"7": "59640",
												"8": "USB food flash drive - donut",
												"9": "Each",
												"10": "7",
												"11": "32.00",
												"12": "15.000",
												"13": "224.00",
												"14": "33.60",
												"15": "140.00",
												"16": "257.60",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228362",
												"1": "109124",
												"2": "69",
												"3": "1",
												"4": "111",
												"5": "2012-01-02",
												"6": "129",
												"7": "59640",
												"8": "Superhero action jacket (Blue) XS",
												"9": "Each",
												"10": "8",
												"11": "25.00",
												"12": "15.000",
												"13": "200.00",
												"14": "30.00",
												"15": "48.00",
												"16": "230.00",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228363",
												"1": "109124",
												"2": "69",
												"3": "1",
												"4": "168",
												"5": "2012-01-02",
												"6": "129",
												"7": "59640",
												"8": "IT joke mug - keyboard not found � press F1 to continue (White)",
												"9": "Each",
												"10": "8",
												"11": "13.00",
												"12": "15.000",
												"13": "104.00",
												"14": "15.60",
												"15": "68.00",
												"16": "119.60",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228364",
												"1": "109124",
												"2": "69",
												"3": "1",
												"4": "182",
												"5": "2012-01-02",
												"6": "129",
												"7": "59640",
												"8": "Developer joke mug - inheritance is the OO way to become wealthy (White)",
												"9": "Each",
												"10": "9",
												"11": "13.00",
												"12": "15.000",
												"13": "117.00",
												"14": "17.55",
												"15": "76.50",
												"16": "134.55",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "228365",
												"1": "47471",
												"2": "0",
												"3": "0",
												"4": "181",
												"5": "2012-01-02",
												"6": "129",
												"7": "59641",
												"8": "Developer joke mug - inheritance is the OO way to become wealthy (Black)",
												"9": "Each",
												"10": "4",
												"11": "13.00",
												"12": "15.000",
												"13": "52.00",
												"14": "7.80",
												"15": "34.00",
												"16": "59.80",
												"17": "4",
												"18": "0",
												"19": "14"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "SaleKey",
												"type": "string"
											},
											{
												"key": "1",
												"name": "CityKey",
												"type": "string"
											},
											{
												"key": "2",
												"name": "CustomerKey",
												"type": "string"
											},
											{
												"key": "3",
												"name": "BillToCustomerKey",
												"type": "string"
											},
											{
												"key": "4",
												"name": "StockItemKey",
												"type": "string"
											},
											{
												"key": "5",
												"name": "DeliveryDateKey",
												"type": "string"
											},
											{
												"key": "6",
												"name": "SalespersonKey",
												"type": "string"
											},
											{
												"key": "7",
												"name": "WWIInvoiceID",
												"type": "string"
											},
											{
												"key": "8",
												"name": "Description",
												"type": "string"
											},
											{
												"key": "9",
												"name": "Package",
												"type": "string"
											},
											{
												"key": "10",
												"name": "Quantity",
												"type": "string"
											},
											{
												"key": "11",
												"name": "UnitPrice",
												"type": "string"
											},
											{
												"key": "12",
												"name": "TaxRate",
												"type": "string"
											},
											{
												"key": "13",
												"name": "TotalExcludingTax",
												"type": "string"
											},
											{
												"key": "14",
												"name": "TaxAmount",
												"type": "string"
											},
											{
												"key": "15",
												"name": "Profit",
												"type": "string"
											},
											{
												"key": "16",
												"name": "TotalIncludingTax",
												"type": "string"
											},
											{
												"key": "17",
												"name": "TotalDryItems",
												"type": "string"
											},
											{
												"key": "18",
												"name": "TotalChillerItems",
												"type": "string"
											},
											{
												"key": "19",
												"name": "LineageKey",
												"type": "string"
											}
										],
										"truncated": false
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"2"
											],
											"seriesFieldKeys": [
												"2"
											],
											"isStacked": false
										}
									}
								}
							},
							"fbe8f4d4-eba9-4582-8037-db76af09655f": {
								"type": "Synapse.DataFrame",
								"sync_state": {
									"table": {
										"rows": [
											{
												"0": "2003570",
												"1": "76101",
												"2": "166",
												"3": "1",
												"4": "214",
												"5": "2012-02-25",
												"6": "150",
												"7": "55276",
												"8": "USB food flash drive - hot dog",
												"9": "Each",
												"10": "10",
												"11": "32.00",
												"12": "15.000",
												"13": "320.00",
												"14": "48.00",
												"15": "200.00",
												"16": "368.00",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003571",
												"1": "76101",
												"2": "166",
												"3": "1",
												"4": "165",
												"5": "2012-02-25",
												"6": "150",
												"7": "55276",
												"8": "IT joke mug - that behavior is by design (Black)",
												"9": "Each",
												"10": "8",
												"11": "13.00",
												"12": "15.000",
												"13": "104.00",
												"14": "15.60",
												"15": "68.00",
												"16": "119.60",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003572",
												"1": "76101",
												"2": "166",
												"3": "1",
												"4": "115",
												"5": "2012-02-25",
												"6": "150",
												"7": "55276",
												"8": "Alien officer hoodie (Black) 4XL",
												"9": "Each",
												"10": "6",
												"11": "35.00",
												"12": "15.000",
												"13": "210.00",
												"14": "31.50",
												"15": "108.00",
												"16": "241.50",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003573",
												"1": "106153",
												"2": "73",
												"3": "1",
												"4": "86",
												"5": "2012-02-25",
												"6": "19",
												"7": "55277",
												"8": "Animal with big feet slippers (Brown) S",
												"9": "Each",
												"10": "1",
												"11": "32.00",
												"12": "15.000",
												"13": "32.00",
												"14": "4.80",
												"15": "24.00",
												"16": "36.80",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003574",
												"1": "106153",
												"2": "73",
												"3": "1",
												"4": "157",
												"5": "2012-02-25",
												"6": "19",
												"7": "55277",
												"8": "RC toy sedan car with remote control (Pink) 1/50 scale",
												"9": "Each",
												"10": "3",
												"11": "25.00",
												"12": "15.000",
												"13": "75.00",
												"14": "11.25",
												"15": "37.50",
												"16": "86.25",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003575",
												"1": "106153",
												"2": "73",
												"3": "1",
												"4": "182",
												"5": "2012-02-25",
												"6": "19",
												"7": "55277",
												"8": "Developer joke mug - inheritance is the OO way to become wealthy (White)",
												"9": "Each",
												"10": "2",
												"11": "13.00",
												"12": "15.000",
												"13": "26.00",
												"14": "3.90",
												"15": "17.00",
												"16": "29.90",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003576",
												"1": "106153",
												"2": "73",
												"3": "1",
												"4": "171",
												"5": "2012-02-25",
												"6": "19",
												"7": "55277",
												"8": "Developer joke mug - this code was generated by a tool (Black)",
												"9": "Each",
												"10": "7",
												"11": "13.00",
												"12": "15.000",
												"13": "91.00",
												"14": "13.65",
												"15": "59.50",
												"16": "104.65",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003577",
												"1": "106153",
												"2": "73",
												"3": "1",
												"4": "69",
												"5": "2012-02-25",
												"6": "19",
												"7": "55277",
												"8": "Pack of 12 action figures (male)",
												"9": "Packet",
												"10": "3",
												"11": "16.00",
												"12": "15.000",
												"13": "48.00",
												"14": "7.20",
												"15": "31.50",
												"16": "55.20",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003578",
												"1": "81839",
												"2": "289",
												"3": "202",
												"4": "2",
												"5": "2012-02-25",
												"6": "155",
												"7": "55278",
												"8": "Void fill 300 L bag (White) 300L",
												"9": "Each",
												"10": "10",
												"11": "37.50",
												"12": "15.000",
												"13": "375.00",
												"14": "56.25",
												"15": "195.00",
												"16": "431.25",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003579",
												"1": "81839",
												"2": "289",
												"3": "202",
												"4": "90",
												"5": "2012-02-25",
												"6": "155",
												"7": "55278",
												"8": "Furry gorilla with big eyes slippers (Black) S",
												"9": "Each",
												"10": "8",
												"11": "32.00",
												"12": "15.000",
												"13": "256.00",
												"14": "38.40",
												"15": "192.00",
												"16": "294.40",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003580",
												"1": "81839",
												"2": "289",
												"3": "202",
												"4": "206",
												"5": "2012-02-25",
												"6": "155",
												"7": "55278",
												"8": "USB food flash drive - fortune cookie",
												"9": "Each",
												"10": "6",
												"11": "32.00",
												"12": "15.000",
												"13": "192.00",
												"14": "28.80",
												"15": "120.00",
												"16": "220.80",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003581",
												"1": "55733",
												"2": "0",
												"3": "0",
												"4": "48",
												"5": "2012-02-25",
												"6": "155",
												"7": "55279",
												"8": "32 mm Anti static bubble wrap (Blue) 20m",
												"9": "Each",
												"10": "80",
												"11": "48.00",
												"12": "15.000",
												"13": "3840.00",
												"14": "576.00",
												"15": "2000.00",
												"16": "4416.00",
												"17": "80",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003582",
												"1": "55733",
												"2": "0",
												"3": "0",
												"4": "216",
												"5": "2012-02-25",
												"6": "155",
												"7": "55279",
												"8": "USB food flash drive - sushi roll",
												"9": "Each",
												"10": "7",
												"11": "32.00",
												"12": "15.000",
												"13": "224.00",
												"14": "33.60",
												"15": "140.00",
												"16": "257.60",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003583",
												"1": "55733",
												"2": "0",
												"3": "0",
												"4": "75",
												"5": "2012-02-25",
												"6": "155",
												"7": "55279",
												"8": "Halloween zombie mask (Light Brown) XL",
												"9": "Each",
												"10": "108",
												"11": "18.00",
												"12": "15.000",
												"13": "1944.00",
												"14": "291.60",
												"15": "-108.00",
												"16": "2235.60",
												"17": "108",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003584",
												"1": "90821",
												"2": "292",
												"3": "202",
												"4": "196",
												"5": "2012-02-25",
												"6": "151",
												"7": "55280",
												"8": "DBA joke mug - I will get you in order (White)",
												"9": "Each",
												"10": "4",
												"11": "13.00",
												"12": "15.000",
												"13": "52.00",
												"14": "7.80",
												"15": "34.00",
												"16": "59.80",
												"17": "4",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003585",
												"1": "83491",
												"2": "0",
												"3": "0",
												"4": "95",
												"5": "2012-02-25",
												"6": "158",
												"7": "55281",
												"8": "Ogre battery-powered slippers (Green) XL",
												"9": "Each",
												"10": "1",
												"11": "32.00",
												"12": "15.000",
												"13": "32.00",
												"14": "4.80",
												"15": "23.50",
												"16": "36.80",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003586",
												"1": "83491",
												"2": "0",
												"3": "0",
												"4": "198",
												"5": "2012-02-25",
												"6": "158",
												"7": "55281",
												"8": "DBA joke mug - it depends (White)",
												"9": "Each",
												"10": "4",
												"11": "13.00",
												"12": "15.000",
												"13": "52.00",
												"14": "7.80",
												"15": "34.00",
												"16": "59.80",
												"17": "4",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003587",
												"1": "83491",
												"2": "0",
												"3": "0",
												"4": "96",
												"5": "2012-02-25",
												"6": "158",
												"7": "55281",
												"8": "Ogre battery-powered slippers (Green) L",
												"9": "Each",
												"10": "3",
												"11": "32.00",
												"12": "15.000",
												"13": "96.00",
												"14": "14.40",
												"15": "72.00",
												"16": "110.40",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003588",
												"1": "83491",
												"2": "0",
												"3": "0",
												"4": "1",
												"5": "2012-02-25",
												"6": "158",
												"7": "55281",
												"8": "Void fill 400 L bag (White) 400L",
												"9": "Each",
												"10": "10",
												"11": "50.00",
												"12": "15.000",
												"13": "500.00",
												"14": "75.00",
												"15": "240.00",
												"16": "575.00",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003589",
												"1": "83491",
												"2": "0",
												"3": "0",
												"4": "180",
												"5": "2012-02-25",
												"6": "158",
												"7": "55281",
												"8": "Developer joke mug - (hip, hip, array) (White)",
												"9": "Each",
												"10": "2",
												"11": "13.00",
												"12": "15.000",
												"13": "26.00",
												"14": "3.90",
												"15": "17.00",
												"16": "29.90",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003590",
												"1": "108354",
												"2": "302",
												"3": "202",
												"4": "128",
												"5": "2012-02-25",
												"6": "129",
												"7": "55282",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) S",
												"9": "Each",
												"10": "60",
												"11": "18.00",
												"12": "15.000",
												"13": "1080.00",
												"14": "162.00",
												"15": "660.00",
												"16": "1242.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003591",
												"1": "108354",
												"2": "302",
												"3": "202",
												"4": "53",
												"5": "2012-02-25",
												"6": "129",
												"7": "55282",
												"8": "10 mm Anti static bubble wrap (Blue) 50m",
												"9": "Each",
												"10": "30",
												"11": "99.00",
												"12": "15.000",
												"13": "2970.00",
												"14": "445.50",
												"15": "1620.00",
												"16": "3415.50",
												"17": "30",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003592",
												"1": "103794",
												"2": "91",
												"3": "1",
												"4": "208",
												"5": "2012-02-25",
												"6": "129",
												"7": "55283",
												"8": "USB food flash drive - donut",
												"9": "Each",
												"10": "3",
												"11": "32.00",
												"12": "15.000",
												"13": "96.00",
												"14": "14.40",
												"15": "60.00",
												"16": "110.40",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003593",
												"1": "103794",
												"2": "91",
												"3": "1",
												"4": "86",
												"5": "2012-02-25",
												"6": "129",
												"7": "55283",
												"8": "Animal with big feet slippers (Brown) S",
												"9": "Each",
												"10": "6",
												"11": "32.00",
												"12": "15.000",
												"13": "192.00",
												"14": "28.80",
												"15": "144.00",
												"16": "220.80",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003594",
												"1": "103794",
												"2": "91",
												"3": "1",
												"4": "20",
												"5": "2012-02-25",
												"6": "129",
												"7": "55283",
												"8": "Black and yellow heavy despatch tape 48mmx100m",
												"9": "Each",
												"10": "120",
												"11": "4.10",
												"12": "15.000",
												"13": "492.00",
												"14": "73.80",
												"15": "204.00",
												"16": "565.80",
												"17": "120",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003595",
												"1": "97147",
												"2": "0",
												"3": "0",
												"4": "168",
												"5": "2012-02-25",
												"6": "155",
												"7": "55284",
												"8": "IT joke mug - keyboard not found � press F1 to continue (White)",
												"9": "Each",
												"10": "7",
												"11": "13.00",
												"12": "15.000",
												"13": "91.00",
												"14": "13.65",
												"15": "59.50",
												"16": "104.65",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003596",
												"1": "97147",
												"2": "0",
												"3": "0",
												"4": "20",
												"5": "2012-02-25",
												"6": "155",
												"7": "55284",
												"8": "Black and yellow heavy despatch tape 48mmx100m",
												"9": "Each",
												"10": "48",
												"11": "4.10",
												"12": "15.000",
												"13": "196.80",
												"14": "29.52",
												"15": "81.60",
												"16": "226.32",
												"17": "48",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003597",
												"1": "97147",
												"2": "0",
												"3": "0",
												"4": "173",
												"5": "2012-02-25",
												"6": "155",
												"7": "55284",
												"8": "Developer joke mug - a foo walks into a bar (Black)",
												"9": "Each",
												"10": "8",
												"11": "13.00",
												"12": "15.000",
												"13": "104.00",
												"14": "15.60",
												"15": "68.00",
												"16": "119.60",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003598",
												"1": "94299",
												"2": "93",
												"3": "1",
												"4": "210",
												"5": "2012-02-25",
												"6": "152",
												"7": "55285",
												"8": "USB food flash drive - chocolate bar",
												"9": "Each",
												"10": "5",
												"11": "32.00",
												"12": "15.000",
												"13": "160.00",
												"14": "24.00",
												"15": "100.00",
												"16": "184.00",
												"17": "5",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003599",
												"1": "94299",
												"2": "93",
												"3": "1",
												"4": "130",
												"5": "2012-02-25",
												"6": "152",
												"7": "55285",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) XXS",
												"9": "Each",
												"10": "84",
												"11": "18.00",
												"12": "15.000",
												"13": "1512.00",
												"14": "226.80",
												"15": "924.00",
												"16": "1738.80",
												"17": "84",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003600",
												"1": "99567",
												"2": "367",
												"3": "202",
												"4": "106",
												"5": "2012-02-25",
												"6": "155",
												"7": "55286",
												"8": "Superhero action jacket (Blue) XXL",
												"9": "Each",
												"10": "6",
												"11": "30.00",
												"12": "15.000",
												"13": "180.00",
												"14": "27.00",
												"15": "48.00",
												"16": "207.00",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003601",
												"1": "99567",
												"2": "367",
												"3": "202",
												"4": "153",
												"5": "2012-02-25",
												"6": "155",
												"7": "55286",
												"8": "Ride on toy sedan car (Black) 1/12 scale",
												"9": "Each",
												"10": "8",
												"11": "230.00",
												"12": "15.000",
												"13": "1840.00",
												"14": "276.00",
												"15": "680.00",
												"16": "2116.00",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003602",
												"1": "103866",
												"2": "315",
												"3": "202",
												"4": "126",
												"5": "2012-02-25",
												"6": "155",
												"7": "55287",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) L",
												"9": "Each",
												"10": "36",
												"11": "18.00",
												"12": "15.000",
												"13": "648.00",
												"14": "97.20",
												"15": "396.00",
												"16": "745.20",
												"17": "36",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003603",
												"1": "103866",
												"2": "315",
												"3": "202",
												"4": "152",
												"5": "2012-02-25",
												"6": "155",
												"7": "55287",
												"8": "Ride on toy sedan car (Red) 1/12 scale",
												"9": "Each",
												"10": "10",
												"11": "230.00",
												"12": "15.000",
												"13": "2300.00",
												"14": "345.00",
												"15": "850.00",
												"16": "2645.00",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003604",
												"1": "103866",
												"2": "315",
												"3": "202",
												"4": "121",
												"5": "2012-02-25",
												"6": "155",
												"7": "55287",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) 5XL",
												"9": "Each",
												"10": "60",
												"11": "18.00",
												"12": "15.000",
												"13": "1080.00",
												"14": "162.00",
												"15": "600.00",
												"16": "1242.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003605",
												"1": "99970",
												"2": "0",
												"3": "0",
												"4": "39",
												"5": "2012-02-25",
												"6": "143",
												"7": "55288",
												"8": "Shipping carton (Brown) 356x229x229mm",
												"9": "Each",
												"10": "25",
												"11": "1.14",
												"12": "15.000",
												"13": "28.50",
												"14": "4.28",
												"15": "14.50",
												"16": "32.78",
												"17": "25",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003606",
												"1": "99970",
												"2": "0",
												"3": "0",
												"4": "162",
												"5": "2012-02-25",
												"6": "143",
												"7": "55288",
												"8": "RC toy sedan car with remote control (Black) 1/50 scale",
												"9": "Each",
												"10": "1",
												"11": "25.00",
												"12": "15.000",
												"13": "25.00",
												"14": "3.75",
												"15": "12.50",
												"16": "28.75",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003607",
												"1": "99970",
												"2": "0",
												"3": "0",
												"4": "165",
												"5": "2012-02-25",
												"6": "143",
												"7": "55288",
												"8": "IT joke mug - that behavior is by design (Black)",
												"9": "Each",
												"10": "3",
												"11": "13.00",
												"12": "15.000",
												"13": "39.00",
												"14": "5.85",
												"15": "25.50",
												"16": "44.85",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003608",
												"1": "76043",
												"2": "267",
												"3": "202",
												"4": "110",
												"5": "2012-02-25",
												"6": "19",
												"7": "55289",
												"8": "Superhero action jacket (Blue) S",
												"9": "Each",
												"10": "7",
												"11": "25.00",
												"12": "15.000",
												"13": "175.00",
												"14": "26.25",
												"15": "42.00",
												"16": "201.25",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003609",
												"1": "76043",
												"2": "267",
												"3": "202",
												"4": "32",
												"5": "2012-02-25",
												"6": "19",
												"7": "55289",
												"8": "3 kg Courier post bag (White) 300x190x95mm",
												"9": "Each",
												"10": "25",
												"11": ".66",
												"12": "15.000",
												"13": "16.50",
												"14": "2.48",
												"15": "7.50",
												"16": "18.98",
												"17": "25",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003610",
												"1": "81238",
												"2": "17",
												"3": "1",
												"4": "32",
												"5": "2012-02-25",
												"6": "152",
												"7": "55290",
												"8": "3 kg Courier post bag (White) 300x190x95mm",
												"9": "Each",
												"10": "175",
												"11": ".66",
												"12": "15.000",
												"13": "115.50",
												"14": "17.33",
												"15": "52.50",
												"16": "132.83",
												"17": "175",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003611",
												"1": "81238",
												"2": "17",
												"3": "1",
												"4": "82",
												"5": "2012-02-25",
												"6": "152",
												"7": "55290",
												"8": "Furry animal socks (Pink) S",
												"9": "Pair",
												"10": "36",
												"11": "5.00",
												"12": "15.000",
												"13": "180.00",
												"14": "27.00",
												"15": "126.00",
												"16": "207.00",
												"17": "36",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003612",
												"1": "81238",
												"2": "17",
												"3": "1",
												"4": "88",
												"5": "2012-02-25",
												"6": "152",
												"7": "55290",
												"8": "Furry gorilla with big eyes slippers (Black) L",
												"9": "Each",
												"10": "5",
												"11": "32.00",
												"12": "15.000",
												"13": "160.00",
												"14": "24.00",
												"15": "120.00",
												"16": "184.00",
												"17": "5",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003613",
												"1": "81238",
												"2": "17",
												"3": "1",
												"4": "3",
												"5": "2012-02-25",
												"6": "152",
												"7": "55290",
												"8": "Void fill 200 L bag (White) 200L",
												"9": "Each",
												"10": "30",
												"11": "25.00",
												"12": "15.000",
												"13": "750.00",
												"14": "112.50",
												"15": "270.00",
												"16": "862.50",
												"17": "30",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003614",
												"1": "96024",
												"2": "38",
												"3": "1",
												"4": "199",
												"5": "2012-02-25",
												"6": "152",
												"7": "55291",
												"8": "DBA joke mug - you might be a DBA if (Black)",
												"9": "Each",
												"10": "8",
												"11": "13.00",
												"12": "15.000",
												"13": "104.00",
												"14": "15.60",
												"15": "68.00",
												"16": "119.60",
												"17": "8",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003615",
												"1": "96024",
												"2": "38",
												"3": "1",
												"4": "74",
												"5": "2012-02-25",
												"6": "152",
												"7": "55291",
												"8": "Halloween skull mask (Gray) S",
												"9": "Each",
												"10": "36",
												"11": "18.00",
												"12": "15.000",
												"13": "648.00",
												"14": "97.20",
												"15": "108.00",
												"16": "745.20",
												"17": "36",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003616",
												"1": "96024",
												"2": "38",
												"3": "1",
												"4": "35",
												"5": "2012-02-25",
												"6": "152",
												"7": "55291",
												"8": "Shipping carton (Brown) 356x356x279mm",
												"9": "Each",
												"10": "75",
												"11": "2.04",
												"12": "15.000",
												"13": "153.00",
												"14": "22.95",
												"15": "74.25",
												"16": "175.95",
												"17": "75",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003617",
												"1": "96024",
												"2": "38",
												"3": "1",
												"4": "216",
												"5": "2012-02-25",
												"6": "152",
												"7": "55291",
												"8": "USB food flash drive - sushi roll",
												"9": "Each",
												"10": "9",
												"11": "32.00",
												"12": "15.000",
												"13": "288.00",
												"14": "43.20",
												"15": "180.00",
												"16": "331.20",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003618",
												"1": "81492",
												"2": "0",
												"3": "0",
												"4": "9",
												"5": "2012-02-25",
												"6": "152",
												"7": "55292",
												"8": "Small 9mm replacement blades 9mm",
												"9": "Each",
												"10": "90",
												"11": "4.10",
												"12": "15.000",
												"13": "369.00",
												"14": "55.35",
												"15": "135.00",
												"16": "424.35",
												"17": "90",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003619",
												"1": "81492",
												"2": "0",
												"3": "0",
												"4": "175",
												"5": "2012-02-25",
												"6": "152",
												"7": "55292",
												"8": "Developer joke mug - there are 10 types of people in the world (Black)",
												"9": "Each",
												"10": "5",
												"11": "13.00",
												"12": "15.000",
												"13": "65.00",
												"14": "9.75",
												"15": "42.50",
												"16": "74.75",
												"17": "5",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003620",
												"1": "65272",
												"2": "285",
												"3": "202",
												"4": "71",
												"5": "2012-02-25",
												"6": "156",
												"7": "55293",
												"8": "Halloween skull mask (Gray) XL",
												"9": "Each",
												"10": "60",
												"11": "18.00",
												"12": "15.000",
												"13": "1080.00",
												"14": "162.00",
												"15": "180.00",
												"16": "1242.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003621",
												"1": "65272",
												"2": "285",
												"3": "202",
												"4": "141",
												"5": "2012-02-25",
												"6": "156",
												"7": "55293",
												"8": "\"The Gu\" red shirt XML tag t-shirt (White) S",
												"9": "Each",
												"10": "72",
												"11": "18.00",
												"12": "15.000",
												"13": "1296.00",
												"14": "194.40",
												"15": "792.00",
												"16": "1490.40",
												"17": "72",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003622",
												"1": "65272",
												"2": "285",
												"3": "202",
												"4": "154",
												"5": "2012-02-25",
												"6": "156",
												"7": "55293",
												"8": "RC big wheel monster truck with remote control (Black) 1/50 scale",
												"9": "Each",
												"10": "2",
												"11": "45.00",
												"12": "15.000",
												"13": "90.00",
												"14": "13.50",
												"15": "59.00",
												"16": "103.50",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003623",
												"1": "65272",
												"2": "285",
												"3": "202",
												"4": "5",
												"5": "2012-02-25",
												"6": "156",
												"7": "55293",
												"8": "Air cushion machine (Blue)",
												"9": "Each",
												"10": "4",
												"11": "1899.00",
												"12": "15.000",
												"13": "7596.00",
												"14": "1139.40",
												"15": "3036.00",
												"16": "8735.40",
												"17": "4",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003624",
												"1": "65272",
												"2": "285",
												"3": "202",
												"4": "65",
												"5": "2012-02-25",
												"6": "156",
												"7": "55293",
												"8": "Large sized bubblewrap roll 50m",
												"9": "Each",
												"10": "50",
												"11": "24.00",
												"12": "15.000",
												"13": "1200.00",
												"14": "180.00",
												"15": "550.00",
												"16": "1380.00",
												"17": "50",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003625",
												"1": "62442",
												"2": "92",
												"3": "1",
												"4": "145",
												"5": "2012-02-25",
												"6": "158",
												"7": "55294",
												"8": "Ride on big wheel monster truck (Black) 1/12 scale",
												"9": "Each",
												"10": "9",
												"11": "345.00",
												"12": "15.000",
												"13": "3105.00",
												"14": "465.75",
												"15": "1260.00",
												"16": "3570.75",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003626",
												"1": "62442",
												"2": "92",
												"3": "1",
												"4": "107",
												"5": "2012-02-25",
												"6": "158",
												"7": "55294",
												"8": "Superhero action jacket (Blue) XL",
												"9": "Each",
												"10": "2",
												"11": "30.00",
												"12": "15.000",
												"13": "60.00",
												"14": "9.00",
												"15": "16.00",
												"16": "69.00",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003627",
												"1": "62442",
												"2": "92",
												"3": "1",
												"4": "64",
												"5": "2012-02-25",
												"6": "158",
												"7": "55294",
												"8": "10 mm Double sided bubble wrap 10m",
												"9": "Each",
												"10": "50",
												"11": "15.00",
												"12": "15.000",
												"13": "750.00",
												"14": "112.50",
												"15": "375.00",
												"16": "862.50",
												"17": "50",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003628",
												"1": "96894",
												"2": "121",
												"3": "1",
												"4": "185",
												"5": "2012-02-25",
												"6": "158",
												"7": "55295",
												"8": "Developer joke mug - fun was unexpected at this time (Black)",
												"9": "Each",
												"10": "1",
												"11": "13.00",
												"12": "15.000",
												"13": "13.00",
												"14": "1.95",
												"15": "8.50",
												"16": "14.95",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003629",
												"1": "96894",
												"2": "121",
												"3": "1",
												"4": "75",
												"5": "2012-02-25",
												"6": "158",
												"7": "55295",
												"8": "Halloween zombie mask (Light Brown) XL",
												"9": "Each",
												"10": "12",
												"11": "18.00",
												"12": "15.000",
												"13": "216.00",
												"14": "32.40",
												"15": "-12.00",
												"16": "248.40",
												"17": "12",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003630",
												"1": "96894",
												"2": "121",
												"3": "1",
												"4": "146",
												"5": "2012-02-25",
												"6": "158",
												"7": "55295",
												"8": "Ride on vintage American toy coupe (Black) 1/12 scale",
												"9": "Each",
												"10": "9",
												"11": "285.00",
												"12": "15.000",
												"13": "2565.00",
												"14": "384.75",
												"15": "1170.00",
												"16": "2949.75",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003631",
												"1": "98014",
												"2": "204",
												"3": "202",
												"4": "34",
												"5": "2012-02-25",
												"6": "154",
												"7": "55296",
												"8": "Shipping carton (Brown) 457x457x457mm",
												"9": "Each",
												"10": "225",
												"11": "2.10",
												"12": "15.000",
												"13": "472.50",
												"14": "70.88",
												"15": "225.00",
												"16": "543.38",
												"17": "225",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003632",
												"1": "98014",
												"2": "204",
												"3": "202",
												"4": "120",
												"5": "2012-02-25",
												"6": "154",
												"7": "55296",
												"8": "\"The Gu\" red shirt XML tag t-shirt (Black) 6XL",
												"9": "Each",
												"10": "120",
												"11": "18.00",
												"12": "15.000",
												"13": "2160.00",
												"14": "324.00",
												"15": "1200.00",
												"16": "2484.00",
												"17": "120",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003633",
												"1": "98014",
												"2": "204",
												"3": "202",
												"4": "103",
												"5": "2012-02-25",
												"6": "154",
												"7": "55296",
												"8": "Superhero action jacket (Blue) 5XL",
												"9": "Each",
												"10": "2",
												"11": "34.00",
												"12": "15.000",
												"13": "68.00",
												"14": "10.20",
												"15": "20.00",
												"16": "78.20",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003634",
												"1": "72803",
												"2": "131",
												"3": "1",
												"4": "49",
												"5": "2012-02-25",
												"6": "155",
												"7": "55297",
												"8": "32 mm Anti static bubble wrap (Blue) 10m",
												"9": "Each",
												"10": "40",
												"11": "32.00",
												"12": "15.000",
												"13": "1280.00",
												"14": "192.00",
												"15": "640.00",
												"16": "1472.00",
												"17": "40",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003635",
												"1": "72803",
												"2": "131",
												"3": "1",
												"4": "183",
												"5": "2012-02-25",
												"6": "155",
												"7": "55297",
												"8": "Developer joke mug - when your hammer is C++ (Black)",
												"9": "Each",
												"10": "7",
												"11": "13.00",
												"12": "15.000",
												"13": "91.00",
												"14": "13.65",
												"15": "59.50",
												"16": "104.65",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003636",
												"1": "72803",
												"2": "131",
												"3": "1",
												"4": "34",
												"5": "2012-02-25",
												"6": "155",
												"7": "55297",
												"8": "Shipping carton (Brown) 457x457x457mm",
												"9": "Each",
												"10": "175",
												"11": "2.10",
												"12": "15.000",
												"13": "367.50",
												"14": "55.13",
												"15": "175.00",
												"16": "422.63",
												"17": "175",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003637",
												"1": "72803",
												"2": "131",
												"3": "1",
												"4": "67",
												"5": "2012-02-25",
												"6": "155",
												"7": "55297",
												"8": "Small sized bubblewrap roll 10m",
												"9": "Each",
												"10": "50",
												"11": "4.50",
												"12": "15.000",
												"13": "225.00",
												"14": "33.75",
												"15": "115.00",
												"16": "258.75",
												"17": "50",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003638",
												"1": "99979",
												"2": "118",
												"3": "1",
												"4": "85",
												"5": "2012-02-25",
												"6": "19",
												"7": "55298",
												"8": "Animal with big feet slippers (Brown) M",
												"9": "Each",
												"10": "6",
												"11": "32.00",
												"12": "15.000",
												"13": "192.00",
												"14": "28.80",
												"15": "144.00",
												"16": "220.80",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003639",
												"1": "99979",
												"2": "118",
												"3": "1",
												"4": "72",
												"5": "2012-02-25",
												"6": "19",
												"7": "55298",
												"8": "Halloween skull mask (Gray) L",
												"9": "Each",
												"10": "108",
												"11": "18.00",
												"12": "15.000",
												"13": "1944.00",
												"14": "291.60",
												"15": "324.00",
												"16": "2235.60",
												"17": "108",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003640",
												"1": "95350",
												"2": "230",
												"3": "202",
												"4": "44",
												"5": "2012-02-25",
												"6": "156",
												"7": "55299",
												"8": "Bubblewrap dispenser (Red) 1.5m",
												"9": "Each",
												"10": "3",
												"11": "240.00",
												"12": "15.000",
												"13": "720.00",
												"14": "108.00",
												"15": "390.00",
												"16": "828.00",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003641",
												"1": "95350",
												"2": "230",
												"3": "202",
												"4": "181",
												"5": "2012-02-25",
												"6": "156",
												"7": "55299",
												"8": "Developer joke mug - inheritance is the OO way to become wealthy (Black)",
												"9": "Each",
												"10": "1",
												"11": "13.00",
												"12": "15.000",
												"13": "13.00",
												"14": "1.95",
												"15": "8.50",
												"16": "14.95",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003642",
												"1": "95350",
												"2": "230",
												"3": "202",
												"4": "202",
												"5": "2012-02-25",
												"6": "156",
												"7": "55299",
												"8": "DBA joke mug - daaaaaa-ta (White)",
												"9": "Each",
												"10": "7",
												"11": "13.00",
												"12": "15.000",
												"13": "91.00",
												"14": "13.65",
												"15": "59.50",
												"16": "104.65",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003643",
												"1": "95350",
												"2": "230",
												"3": "202",
												"4": "210",
												"5": "2012-02-25",
												"6": "156",
												"7": "55299",
												"8": "USB food flash drive - chocolate bar",
												"9": "Each",
												"10": "1",
												"11": "32.00",
												"12": "15.000",
												"13": "32.00",
												"14": "4.80",
												"15": "20.00",
												"16": "36.80",
												"17": "1",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003644",
												"1": "95350",
												"2": "230",
												"3": "202",
												"4": "68",
												"5": "2012-02-25",
												"6": "156",
												"7": "55299",
												"8": "Pack of 12 action figures (female)",
												"9": "Packet",
												"10": "10",
												"11": "16.00",
												"12": "15.000",
												"13": "160.00",
												"14": "24.00",
												"15": "105.00",
												"16": "184.00",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003645",
												"1": "104234",
												"2": "0",
												"3": "0",
												"4": "209",
												"5": "2012-02-25",
												"6": "152",
												"7": "55300",
												"8": "USB food flash drive - cookie",
												"9": "Each",
												"10": "9",
												"11": "32.00",
												"12": "15.000",
												"13": "288.00",
												"14": "43.20",
												"15": "180.00",
												"16": "331.20",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003646",
												"1": "104234",
												"2": "0",
												"3": "0",
												"4": "215",
												"5": "2012-02-25",
												"6": "152",
												"7": "55300",
												"8": "USB food flash drive - hamburger",
												"9": "Each",
												"10": "6",
												"11": "32.00",
												"12": "15.000",
												"13": "192.00",
												"14": "28.80",
												"15": "120.00",
												"16": "220.80",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003647",
												"1": "104234",
												"2": "0",
												"3": "0",
												"4": "98",
												"5": "2012-02-25",
												"6": "152",
												"7": "55300",
												"8": "Ogre battery-powered slippers (Green) S",
												"9": "Each",
												"10": "2",
												"11": "32.00",
												"12": "15.000",
												"13": "64.00",
												"14": "9.60",
												"15": "48.00",
												"16": "73.60",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003648",
												"1": "92188",
												"2": "87",
												"3": "1",
												"4": "29",
												"5": "2012-02-25",
												"6": "154",
												"7": "55301",
												"8": "Black and orange fragile despatch tape 48mmx75m",
												"9": "Each",
												"10": "144",
												"11": "3.70",
												"12": "15.000",
												"13": "532.80",
												"14": "79.92",
												"15": "273.60",
												"16": "612.72",
												"17": "144",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003649",
												"1": "92188",
												"2": "87",
												"3": "1",
												"4": "195",
												"5": "2012-02-25",
												"6": "154",
												"7": "55301",
												"8": "DBA joke mug - I will get you in order (Black)",
												"9": "Each",
												"10": "9",
												"11": "13.00",
												"12": "15.000",
												"13": "117.00",
												"14": "17.55",
												"15": "76.50",
												"16": "134.55",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003650",
												"1": "92188",
												"2": "87",
												"3": "1",
												"4": "8",
												"5": "2012-02-25",
												"6": "154",
												"7": "55301",
												"8": "Large  replacement blades 18mm",
												"9": "Each",
												"10": "100",
												"11": "4.30",
												"12": "15.000",
												"13": "430.00",
												"14": "64.50",
												"15": "225.00",
												"16": "494.50",
												"17": "100",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003651",
												"1": "112897",
												"2": "0",
												"3": "0",
												"4": "191",
												"5": "2012-02-25",
												"6": "154",
												"7": "55302",
												"8": "DBA joke mug - two types of DBAs (Black)",
												"9": "Each",
												"10": "7",
												"11": "13.00",
												"12": "15.000",
												"13": "91.00",
												"14": "13.65",
												"15": "59.50",
												"16": "104.65",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003652",
												"1": "112897",
												"2": "0",
												"3": "0",
												"4": "213",
												"5": "2012-02-25",
												"6": "154",
												"7": "55302",
												"8": "USB food flash drive - pizza slice",
												"9": "Each",
												"10": "7",
												"11": "32.00",
												"12": "15.000",
												"13": "224.00",
												"14": "33.60",
												"15": "140.00",
												"16": "257.60",
												"17": "7",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003653",
												"1": "112897",
												"2": "0",
												"3": "0",
												"4": "70",
												"5": "2012-02-25",
												"6": "154",
												"7": "55302",
												"8": "Pack of 12 action figures (variety)",
												"9": "Packet",
												"10": "5",
												"11": "16.00",
												"12": "15.000",
												"13": "80.00",
												"14": "12.00",
												"15": "52.50",
												"16": "92.00",
												"17": "5",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003654",
												"1": "112897",
												"2": "0",
												"3": "0",
												"4": "91",
												"5": "2012-02-25",
												"6": "154",
												"7": "55302",
												"8": "Plush shark slippers (Gray) XL",
												"9": "Each",
												"10": "4",
												"11": "32.00",
												"12": "15.000",
												"13": "128.00",
												"14": "19.20",
												"15": "94.00",
												"16": "147.20",
												"17": "4",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003655",
												"1": "112897",
												"2": "0",
												"3": "0",
												"4": "46",
												"5": "2012-02-25",
												"6": "154",
												"7": "55302",
												"8": "Bubblewrap dispenser (Black) 1.5m",
												"9": "Each",
												"10": "6",
												"11": "240.00",
												"12": "15.000",
												"13": "1440.00",
												"14": "216.00",
												"15": "780.00",
												"16": "1656.00",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003656",
												"1": "108294",
												"2": "0",
												"3": "0",
												"4": "169",
												"5": "2012-02-25",
												"6": "158",
												"7": "55303",
												"8": "Developer joke mug - old C developers never die (Black)",
												"9": "Each",
												"10": "6",
												"11": "13.00",
												"12": "15.000",
												"13": "78.00",
												"14": "11.70",
												"15": "51.00",
												"16": "89.70",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003657",
												"1": "108294",
												"2": "0",
												"3": "0",
												"4": "103",
												"5": "2012-02-25",
												"6": "158",
												"7": "55303",
												"8": "Superhero action jacket (Blue) 5XL",
												"9": "Each",
												"10": "9",
												"11": "34.00",
												"12": "15.000",
												"13": "306.00",
												"14": "45.90",
												"15": "90.00",
												"16": "351.90",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003658",
												"1": "108294",
												"2": "0",
												"3": "0",
												"4": "6",
												"5": "2012-02-25",
												"6": "158",
												"7": "55303",
												"8": "Air cushion film 200mmx200mm 325m",
												"9": "Each",
												"10": "10",
												"11": "90.00",
												"12": "15.000",
												"13": "900.00",
												"14": "135.00",
												"15": "360.00",
												"16": "1035.00",
												"17": "10",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003659",
												"1": "108294",
												"2": "0",
												"3": "0",
												"4": "167",
												"5": "2012-02-25",
												"6": "158",
												"7": "55303",
												"8": "IT joke mug - keyboard not found � press F1 to continue (Black)",
												"9": "Each",
												"10": "4",
												"11": "13.00",
												"12": "15.000",
												"13": "52.00",
												"14": "7.80",
												"15": "34.00",
												"16": "59.80",
												"17": "4",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003660",
												"1": "108294",
												"2": "0",
												"3": "0",
												"4": "137",
												"5": "2012-02-25",
												"6": "158",
												"7": "55303",
												"8": "\"The Gu\" red shirt XML tag t-shirt (White) XXL",
												"9": "Each",
												"10": "48",
												"11": "18.00",
												"12": "15.000",
												"13": "864.00",
												"14": "129.60",
												"15": "504.00",
												"16": "993.60",
												"17": "48",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003661",
												"1": "80089",
												"2": "270",
												"3": "202",
												"4": "13",
												"5": "2012-02-25",
												"6": "143",
												"7": "55304",
												"8": "Permanent marker blue 5mm nib (Blue) 5mm",
												"9": "Each",
												"10": "108",
												"11": "2.70",
												"12": "15.000",
												"13": "291.60",
												"14": "43.74",
												"15": "108.00",
												"16": "335.34",
												"17": "108",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003662",
												"1": "80089",
												"2": "270",
												"3": "202",
												"4": "1",
												"5": "2012-02-25",
												"6": "143",
												"7": "55304",
												"8": "Void fill 400 L bag (White) 400L",
												"9": "Each",
												"10": "60",
												"11": "50.00",
												"12": "15.000",
												"13": "3000.00",
												"14": "450.00",
												"15": "1440.00",
												"16": "3450.00",
												"17": "60",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003663",
												"1": "80089",
												"2": "270",
												"3": "202",
												"4": "40",
												"5": "2012-02-25",
												"6": "143",
												"7": "55304",
												"8": "Shipping carton (Brown) 279x254x217mm",
												"9": "Each",
												"10": "100",
												"11": "1.11",
												"12": "15.000",
												"13": "111.00",
												"14": "16.65",
												"15": "51.00",
												"16": "127.65",
												"17": "100",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003664",
												"1": "113700",
												"2": "240",
												"3": "202",
												"4": "177",
												"5": "2012-02-25",
												"6": "155",
												"7": "55305",
												"8": "Developer joke mug - understanding recursion requires understanding recursion (Black)",
												"9": "Each",
												"10": "9",
												"11": "13.00",
												"12": "15.000",
												"13": "117.00",
												"14": "17.55",
												"15": "76.50",
												"16": "134.55",
												"17": "9",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003665",
												"1": "113700",
												"2": "240",
												"3": "202",
												"4": "188",
												"5": "2012-02-25",
												"6": "155",
												"7": "55305",
												"8": "Developer joke mug - that's a hardware problem (White)",
												"9": "Each",
												"10": "6",
												"11": "13.00",
												"12": "15.000",
												"13": "78.00",
												"14": "11.70",
												"15": "51.00",
												"16": "89.70",
												"17": "6",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003666",
												"1": "44701",
												"2": "241",
												"3": "202",
												"4": "168",
												"5": "2012-02-25",
												"6": "152",
												"7": "55306",
												"8": "IT joke mug - keyboard not found � press F1 to continue (White)",
												"9": "Each",
												"10": "3",
												"11": "13.00",
												"12": "15.000",
												"13": "39.00",
												"14": "5.85",
												"15": "25.50",
												"16": "44.85",
												"17": "3",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003667",
												"1": "44701",
												"2": "241",
												"3": "202",
												"4": "182",
												"5": "2012-02-25",
												"6": "152",
												"7": "55306",
												"8": "Developer joke mug - inheritance is the OO way to become wealthy (White)",
												"9": "Each",
												"10": "2",
												"11": "13.00",
												"12": "15.000",
												"13": "26.00",
												"14": "3.90",
												"15": "17.00",
												"16": "29.90",
												"17": "2",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003668",
												"1": "44701",
												"2": "241",
												"3": "202",
												"4": "144",
												"5": "2012-02-25",
												"6": "152",
												"7": "55306",
												"8": "\"The Gu\" red shirt XML tag t-shirt (White) 3XS",
												"9": "Each",
												"10": "24",
												"11": "18.00",
												"12": "15.000",
												"13": "432.00",
												"14": "64.80",
												"15": "264.00",
												"16": "496.80",
												"17": "24",
												"18": "0",
												"19": "14"
											},
											{
												"0": "2003669",
												"1": "44701",
												"2": "241",
												"3": "202",
												"4": "137",
												"5": "2012-02-25",
												"6": "152",
												"7": "55306",
												"8": "\"The Gu\" red shirt XML tag t-shirt (White) XXL",
												"9": "Each",
												"10": "36",
												"11": "18.00",
												"12": "15.000",
												"13": "648.00",
												"14": "97.20",
												"15": "378.00",
												"16": "745.20",
												"17": "36",
												"18": "0",
												"19": "14"
											}
										],
										"schema": [
											{
												"key": "0",
												"name": "SaleKey",
												"type": "string"
											},
											{
												"key": "1",
												"name": "CityKey",
												"type": "string"
											},
											{
												"key": "2",
												"name": "CustomerKey",
												"type": "string"
											},
											{
												"key": "3",
												"name": "BillToCustomerKey",
												"type": "string"
											},
											{
												"key": "4",
												"name": "StockItemKey",
												"type": "string"
											},
											{
												"key": "5",
												"name": "DeliveryDateKey",
												"type": "string"
											},
											{
												"key": "6",
												"name": "SalespersonKey",
												"type": "string"
											},
											{
												"key": "7",
												"name": "WWIInvoiceID",
												"type": "string"
											},
											{
												"key": "8",
												"name": "Description",
												"type": "string"
											},
											{
												"key": "9",
												"name": "Package",
												"type": "string"
											},
											{
												"key": "10",
												"name": "Quantity",
												"type": "string"
											},
											{
												"key": "11",
												"name": "UnitPrice",
												"type": "string"
											},
											{
												"key": "12",
												"name": "TaxRate",
												"type": "string"
											},
											{
												"key": "13",
												"name": "TotalExcludingTax",
												"type": "string"
											},
											{
												"key": "14",
												"name": "TaxAmount",
												"type": "string"
											},
											{
												"key": "15",
												"name": "Profit",
												"type": "string"
											},
											{
												"key": "16",
												"name": "TotalIncludingTax",
												"type": "string"
											},
											{
												"key": "17",
												"name": "TotalDryItems",
												"type": "string"
											},
											{
												"key": "18",
												"name": "TotalChillerItems",
												"type": "string"
											},
											{
												"key": "19",
												"name": "LineageKey",
												"type": "string"
											}
										],
										"truncated": false
									},
									"isSummary": false,
									"language": "scala"
								},
								"persist_state": {
									"view": {
										"type": "details",
										"chartOptions": {
											"chartType": "bar",
											"aggregationType": "count",
											"categoryFieldKeys": [
												"0"
											],
											"seriesFieldKeys": [
												"0"
											],
											"isStacked": false
										}
									}
								}
							}
						}
					},
					"enableDebugMode": false,
					"kernelspec": {
						"name": "synapse_pyspark",
						"display_name": "Synapse PySpark"
					},
					"language_info": {
						"name": "python"
					},
					"a365ComputeOptions": {
						"id": "/subscriptions/f43f70f1-af80-4cd6-8ee6-e2f20bd5a8bf/resourceGroups/Synapse-AIAD-801100/providers/Microsoft.Synapse/workspaces/asaworkspace801100/bigDataPools/SparkPool01",
						"name": "SparkPool01",
						"type": "Spark",
						"endpoint": "https://asaworkspace801100.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SparkPool01",
						"auth": {
							"type": "AAD",
							"authResource": "https://dev.azuresynapse.net",
							"authHeader": null
						},
						"sparkVersion": "3.1",
						"nodeCount": 3,
						"cores": 4,
						"memory": 28,
						"extraHeader": null
					},
					"sessionKeepAliveTimeout": 30
				},
				"cells": [
					{
						"cell_type": "code",
						"metadata": {
							"microsoft": {
								"language": "python"
							},
							"jupyter": {
								"outputs_hidden": true
							},
							"collapsed": false
						},
						"source": [
							"%%pyspark\r\n",
							"#Visualizacion datos\r\n",
							"df = spark.read.load('abfss://wwi@asadatalake801100.dfs.core.windows.net/factsale-parquet/2012/Q1/InvoiceDateKey=2012-01-01/part-00007-e289b92c-fe69-489e-b68e-6399feb116fa.c000.snappy.parquet', format='parquet')\r\n",
							"display(df.limit(100))"
						],
						"outputs": [],
						"execution_count": 2
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"collapsed": false
						},
						"source": [
							"data_path = spark.read.load(\r\n",
							"   'abfss://wwi@asadatalake801100.dfs.core.windows.net/factsale-csv/2012/Q1/*/*',\r\n",
							"   format='csv',\r\n",
							"   sep=\"|\",\r\n",
							"   header=True)\r\n",
							"\r\n",
							"display(data_path.limit(100))"
						],
						"outputs": [],
						"execution_count": 3
					},
					{
						"cell_type": "markdown",
						"metadata": {
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# CONFIGURAR OPTIMIZACION CONSULTAS"
						]
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							}
						},
						"source": [
							"# COnfigurar optimizacion de consulta\r\n",
							"spark.conf.set(\"spark.sql.adaptive.enabled\", \"true\")\r\n",
							"spark.conf.set(\"spark.sql.adaptive.coalescePartitions.enabled\", \"true\")\r\n",
							"spark.conf.set(\"spark.sql.adaptive.coalescePartitions.minPartitionNum\", 4)\r\n",
							"spark.conf.set(\"spark.sql.ansi.enabled\", \"true\")"
						],
						"outputs": [],
						"execution_count": 4
					},
					{
						"cell_type": "code",
						"metadata": {
							"jupyter": {
								"source_hidden": false,
								"outputs_hidden": false
							},
							"nteract": {
								"transient": {
									"deleting": false
								}
							},
							"microsoft": {
								"language": "sparksql"
							},
							"collapsed": false
						},
						"source": [
							"%%sql\r\n",
							"SELECT \r\n",
							"    CityKey,\r\n",
							"    SUM(Quantity) FILTER (WHERE CustomerKey != 0) as TotalQuantity,\r\n",
							"    COUNT(DISTINCT StockItemKey) as UniqueItems\r\n",
							"FROM delta.`abfss://wwi@asadatalake801100.dfs.core.windows.net/factsale-deltalake`\r\n",
							"WHERE InvoiceYear=2012\r\n",
							"    and InvoiceQuarter=1\r\n",
							"GROUP BY CityKey\r\n",
							"ORDER BY TotalQuantity desc\r\n",
							"LIMIT 10"
						],
						"outputs": [],
						"execution_count": 5
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/Database1')]",
			"type": "Microsoft.Synapse/workspaces/databases",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"Ddls": [
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "Database1",
							"EntityType": "DATABASE",
							"Origin": {
								"Type": "SPARK"
							},
							"Properties": {
								"IsSyMSCDMDatabase": true
							},
							"Source": {
								"Provider": "ADLS",
								"Location": "abfss://database1@asadatalake801100.dfs.core.windows.net/",
								"Properties": {
									"FormatType": "parquet",
									"LinkedServiceName": "asaworkspace801100-WorkspaceDefaultStorage"
								}
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					},
					{
						"ActionType": "CREATE",
						"OldEntity": null,
						"NewEntity": {
							"Name": "FactSale",
							"EntityType": "TABLE",
							"Namespace": {
								"DatabaseName": "Database1"
							},
							"Description": "",
							"TableType": "EXTERNAL",
							"Origin": {
								"Type": "SPARK"
							},
							"StorageDescriptor": {
								"Columns": [
									{
										"Name": "TransactionId",
										"OriginDataTypeName": {
											"TypeName": "string",
											"IsComplexType": false,
											"IsNullable": true,
											"Length": 8000,
											"Properties": {
												"HIVE_TYPE_STRING": "string"
											}
										}
									},
									{
										"Name": "CustomerId",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "ProductId",
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									},
									{
										"Name": "Quantity",
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									},
									{
										"Name": "Price",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 38,
											"Scale": 18,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									},
									{
										"Name": "TotalAmount",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 38,
											"Scale": 18,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									},
									{
										"Name": "TransactionDate",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									},
									{
										"Name": "ProfitAmount",
										"OriginDataTypeName": {
											"TypeName": "decimal",
											"IsComplexType": false,
											"IsNullable": true,
											"Precision": 38,
											"Scale": 18,
											"Properties": {
												"HIVE_TYPE_STRING": "decimal"
											}
										}
									},
									{
										"Name": "Hour",
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									},
									{
										"Name": "Minute",
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									},
									{
										"Name": "StoreId",
										"OriginDataTypeName": {
											"TypeName": "short",
											"IsComplexType": false,
											"IsNullable": true,
											"Properties": {
												"HIVE_TYPE_STRING": "short"
											}
										}
									},
									{
										"Name": "Day",
										"Description": "",
										"OriginDataTypeName": {
											"TypeName": "integer",
											"IsComplexType": false,
											"IsNullable": false,
											"Properties": {
												"HIVE_TYPE_STRING": "integer"
											}
										}
									}
								],
								"Format": {
									"InputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat",
									"OutputFormat": "org.apache.hadoop.hive.ql.io.parquet.MapredParquetOutputFormat",
									"FormatType": "parquet",
									"SerializeLib": "org.apache.hadoop.hive.ql.io.parquet.serde.ParquetHiveSerDe",
									"Properties": {
										"path": "abfss://database1@asadatalake801100.dfs.core.windows.net/fact-sale",
										"FormatTypeSetToDatabaseDefault": false
									}
								},
								"Source": {
									"Provider": "ADLS",
									"Location": "abfss://database1@asadatalake801100.dfs.core.windows.net/fact-sale",
									"Properties": {
										"LinkedServiceName": "asadatalake01",
										"LocationSetToDatabaseDefault": false
									}
								},
								"Properties": {
									"textinputformat.record.delimiter": ",",
									"compression": "{\"type\":\"None\",\"level\":\"optimal\"}",
									"derivedModelAttributeInfo": "{\"attributeReferences\":{}}"
								},
								"Compressed": false,
								"IsStoredAsSubdirectories": false
							},
							"Properties": {
								"Description": "",
								"DisplayFolderInfo": "{\"name\":\"Others\",\"colorCode\":\"\"}",
								"PrimaryKeys": "",
								"spark.sql.sources.provider": "parquet"
							},
							"Retention": 0,
							"Temporary": false,
							"IsRewriteEnabled": false,
							"Partitioning": {
								"PartitionFunctionType": "VALUE",
								"Keys": [
									"Day"
								]
							}
						},
						"Source": {
							"Type": "SPARK"
						}
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SparkPool02')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 5
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 6,
					"minNodeCount": 3
				},
				"nodeCount": 3,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "2.4",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SparkPool01')]",
			"type": "Microsoft.Synapse/workspaces/bigDataPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"autoPause": {
					"enabled": true,
					"delayInMinutes": 5
				},
				"autoScale": {
					"enabled": false,
					"maxNodeCount": 6,
					"minNodeCount": 3
				},
				"nodeCount": 3,
				"nodeSize": "Small",
				"nodeSizeFamily": "MemoryOptimized",
				"sparkVersion": "3.1",
				"isComputeIsolationEnabled": false,
				"sessionLevelPackagesEnabled": false,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		},
		{
			"name": "[concat(parameters('workspaceName'), '/SQLPool01')]",
			"type": "Microsoft.Synapse/workspaces/sqlPools",
			"apiVersion": "2019-06-01-preview",
			"properties": {
				"collation": "SQL_Latin1_General_CP1_CI_AS",
				"maxSizeBytes": 263882790666240,
				"annotations": []
			},
			"dependsOn": [],
			"location": "eastus"
		}
	]
}